
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ASSERT ASSIGN BIT_AND BIT_NOT BIT_OR BIT_XOR BLOCK_CLOSER BLOCK_COMMENT BLOCK_OPENER BOOLEAN BREAK BYTE CASE CATCH CHAR CHAR_CONSTANT CLASS COLON COMMA CONST CONTINUE DECR DEFAULT DIV DIVEQ DO DOT DOUBLE ELSE EQUALS EXTENDS FINAL FINALLY FLOAT FLOAT_CONSTANT FOR GREATER GREQ IDENTIFIER IF IMPORT INCR INLINE_COMMENT INSTANCEOF INT INT_CONSTANT LESEQ LESSER LOGIC_AND LOGIC_NOT LOGIC_OR LSHIFT LSHIFTEQ L_PAREN L_SQBR MINUS MINUSEQ MOD MODEQ MULT MULTEQ NATIVE NEW NOTEQ NULL PACKAGE PLUS PLUSEQ QUES RETURN RSHIFT RSHIFTEQ R_PAREN R_SQBR SEMICOLON SHORT STATIC STR_CONSTANT SUPER SWITCH THIS THROW THROWS TRY VOID WHILEGoal : CompilationUnitLiteral : INT_CONSTANT\n    | FLOAT_CONSTANT\n    | CHAR_CONSTANT\n    | STR_CONSTANT\n    | NULL Type : PrimitiveType\n    | ReferenceTypePrimitiveType : NumericType\n    | BOOLEANNumericType : IntegralType\n    | FloatingPointTypeIntegralType : BYTE\n    | SHORT\n    | INT\n    | CHARFloatingPointType : FLOAT\n    | DOUBLEReferenceType : ClassType\n    | ArrayTypeClassType : NameArrayType : Name L_SQBR R_SQBR\n    | PrimitiveType L_SQBR R_SQBR\n    | ArrayType L_SQBR R_SQBRName : SimpleName\n    | QualifiedNameSimpleName : IDENTIFIERQualifiedName : Name DOT IDENTIFIER\n    CompilationUnit : PackageDeclaration ImportDeclarations TypeDeclarations\n    | PackageDeclaration ImportDeclarations\n    | PackageDeclaration TypeDeclarations\n    | ImportDeclarations TypeDeclarations\n    | PackageDeclaration\n    | ImportDeclarations\n    | TypeDeclarations\n    |PackageDeclaration : PACKAGE Name SEMICOLONImportDeclarations : ImportDeclarations ImportDeclaration\n    | ImportDeclarationTypeDeclarations : TypeDeclaration\n    | TypeDeclarations TypeDeclarationImportDeclaration : SingleTypeImportDeclaration\n    | TypeImportOnDemandDeclarationSingleTypeImportDeclaration : IMPORT Name SEMICOLONTypeImportOnDemandDeclaration : IMPORT Name DOT MULT SEMICOLONTypeDeclaration : ClassDeclaration\n    | SEMICOLONModifiers : Modifier\n    | Modifiers ModifierModifier : FINAL\n    | STATICClassDeclaration : Modifiers CLASS IDENTIFIER Super ClassBody\n    | Modifiers CLASS IDENTIFIER ClassBody\n    | CLASS IDENTIFIER Super ClassBody\n    | CLASS IDENTIFIER ClassBodySuper : EXTENDS ClassTypeClassBody : BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSERClassBodyDeclarations : ClassBodyDeclarations ClassBodyDeclaration\n    | ClassBodyDeclarationClassBodyDeclaration : ClassMemberDeclaration\n    | StaticInitializer\n    | ConstructorDeclarationClassMemberDeclaration : MethodDeclaration\n    | FieldDeclarationMethodDeclaration : MethodHeader MethodBodyMethodHeader : Modifiers Type MethodDeclarator Throws\n    | Modifiers VOID MethodDeclarator Throws\n    | Type MethodDeclarator Throws\n    | VOID MethodDeclarator Throws\n    | Modifiers Type MethodDeclarator\n    | Modifiers VOID MethodDeclarator\n    | Type MethodDeclarator\n    | VOID MethodDeclaratorMethodDeclarator : IDENTIFIER L_PAREN R_PAREN\n    | IDENTIFIER L_PAREN FormalParameterList R_PARENFormalParameterList : FormalParameter\n    | FormalParameterList COMMA FormalParameterFormalParameter : Type VariableDeclaratorIdThrows : THROWS ClassTypeListClassTypeList : ClassType\n    | ClassTypeList COMMA ClassTypeMethodBody : Block\n    | SEMICOLONFieldDeclaration : Modifiers Type VariableDeclarators SEMICOLON\n    | Type VariableDeclarators SEMICOLONVariableDeclarators : VariableDeclarator\n    | VariableDeclarators COMMA VariableDeclaratorVariableDeclarator : VariableDeclaratorId\n    | VariableDeclaratorId ASSIGN VariableInitializerVariableDeclaratorId : IDENTIFIER\n    | VariableDeclaratorId L_SQBR R_SQBRVariableInitializer : Expression\n    | ArrayInitializerStaticInitializer : STATIC BlockConstructorDeclaration : Modifiers ConstructorDeclarator Throws ConstructorBody\n    | Modifiers ConstructorDeclarator ConstructorBody\n    | ConstructorDeclarator Throws ConstructorBody\n    | ConstructorDeclarator ConstructorBodyConstructorDeclarator : SimpleName L_PAREN FormalParameterList R_PAREN\n    | SimpleName L_PAREN R_PARENConstructorBody : BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER\n    | BLOCK_OPENER ExplicitConstructorInvocation BLOCK_CLOSER\n    | BLOCK_OPENER BlockStatements BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSERExplicitConstructorInvocation : THIS L_PAREN ArgumentList R_PAREN SEMICOLON\n    | THIS L_PAREN R_PAREN SEMICOLON\n    | SUPER L_PAREN ArgumentList R_PAREN SEMICOLON\n    | SUPER L_PAREN R_PAREN SEMICOLONArrayInitializer : BLOCK_OPENER VariableInitializers BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSERVariableInitializers : VariableInitializer\n    | VariableInitializers COMMA VariableInitializerBlock : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER BlockStatements BLOCK_CLOSERBlockStatements : BlockStatement\n    | BlockStatements BlockStatementBlockStatement : LocalVariableDeclarationStatement\n    | StatementLocalVariableDeclarationStatement : LocalVariableDeclaration SEMICOLONLocalVariableDeclaration : Type VariableDeclaratorsStatement : StatementWithoutTrailingSubstatement\n    | LabeledStatement\n    | IfThenStatement\n    | IfThenElseStatement\n    | WhileStatement\n    | ForStatementStatementNoShortIf : StatementWithoutTrailingSubstatement\n    | LabeledStatementNoShortIf\n    | IfThenElseStatementNoShortIf\n    | WhileStatementNoShortIf\n    | ForStatementNoShortIfStatementWithoutTrailingSubstatement : Block\n    | EmptyStatement\n    | ExpressionStatement\n    | SwitchStatement\n    | DoStatement\n    | BreakStatement\n    | ContinueStatement\n    | ReturnStatement\n    | ThrowStatement\n    | TryStatementEmptyStatement : SEMICOLONExpressionStatement : StatementExpression SEMICOLONSwitchStatement : SWITCH L_PAREN Expression R_PAREN SwitchBlockSwitchBlock : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER SwitchBlockStatementGroups SwitchLabels BLOCK_CLOSER\n    | BLOCK_OPENER SwitchBlockStatementGroups BLOCK_CLOSER\n    | BLOCK_OPENER SwitchLabels BLOCK_CLOSERSwitchBlockStatementGroups : SwitchBlockStatementGroup\n    | SwitchBlockStatementGroups SwitchBlockStatementGroupSwitchBlockStatementGroup : SwitchLabels BlockStatementsSwitchLabels : SwitchLabel\n    | SwitchLabels SwitchLabelSwitchLabel : CASE ConstantExpression COLON\n    | DEFAULT COLONDoStatement : DO Statement WHILE L_PAREN Expression R_PAREN SEMICOLONBreakStatement : BREAK IDENTIFIER SEMICOLON\n    | BREAK SEMICOLONContinueStatement : CONTINUE IDENTIFIER SEMICOLON\n    | CONTINUE SEMICOLONReturnStatement : RETURN Expression SEMICOLON\n    | RETURN SEMICOLONThrowStatement : THROW Expression SEMICOLONTryStatement : TRY Block Catches\n    | TRY Block Catches Finally\n    | TRY Block FinallyCatches : CatchClause\n    | Catches CatchClauseCatchClause : CATCH L_PAREN FormalParameter R_PAREN BlockFinally : FINALLY BlockLabeledStatementNoShortIf : IDENTIFIER COLON StatementNoShortIfIfThenElseStatementNoShortIf : IF L_PAREN Expression R_PAREN StatementNoShortIf ELSE StatementNoShortIfWhileStatementNoShortIf : WHILE L_PAREN Expression R_PAREN StatementNoShortIfForStatementNoShortIf : FOR L_PAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate R_PAREN StatementNoShortIf\n    | FOR L_PAREN SEMICOLON Expression SEMICOLON ForUpdate R_PAREN StatementNoShortIf\n    | FOR L_PAREN ForInit SEMICOLON SEMICOLON ForUpdate R_PAREN StatementNoShortIf\n    | FOR L_PAREN ForInit SEMICOLON Expression SEMICOLON R_PAREN StatementNoShortIf\n    | FOR L_PAREN ForInit SEMICOLON SEMICOLON R_PAREN StatementNoShortIf\n    | FOR L_PAREN SEMICOLON Expression SEMICOLON R_PAREN StatementNoShortIf\n    | FOR L_PAREN SEMICOLON SEMICOLON ForUpdate R_PAREN StatementNoShortIf\n    | FOR L_PAREN SEMICOLON SEMICOLON R_PAREN StatementNoShortIfLabeledStatement : IDENTIFIER COLON StatementIfThenStatement : IF L_PAREN Expression R_PAREN StatementIfThenElseStatement : IF L_PAREN Expression R_PAREN StatementNoShortIf ELSE StatementWhileStatement : WHILE L_PAREN Expression R_PAREN StatementForStatement : FOR L_PAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate R_PAREN Statement\n    | FOR L_PAREN SEMICOLON Expression SEMICOLON ForUpdate R_PAREN Statement\n    | FOR L_PAREN ForInit SEMICOLON SEMICOLON ForUpdate R_PAREN Statement\n    | FOR L_PAREN ForInit SEMICOLON Expression SEMICOLON R_PAREN Statement\n    | FOR L_PAREN ForInit SEMICOLON SEMICOLON R_PAREN Statement\n    | FOR L_PAREN SEMICOLON Expression SEMICOLON R_PAREN Statement\n    | FOR L_PAREN SEMICOLON SEMICOLON ForUpdate R_PAREN Statement\n    | FOR L_PAREN SEMICOLON SEMICOLON R_PAREN StatementStatementExpression : Assignment\n    | PreDecrementExpression\n    | PreIncrementExpression\n    | PostDecrementExpression\n    | PostIncrementExpression\n    | ClassInstanceCreationExpression\n    | MethodInvocationForInit : StatementExpressionList\n    | LocalVariableDeclarationForUpdate : StatementExpressionListStatementExpressionList : StatementExpression\n    | StatementExpressionList COMMA StatementExpressionPrimary : PrimaryNoNewArray\n    | ArrayCreationExpressionPrimaryNoNewArray : Literal\n    | THIS\n    | L_PAREN Expression R_PAREN\n    | ClassInstanceCreationExpression\n    | FieldAccess\n    | MethodInvocation\n    | ArrayAccessClassInstanceCreationExpression : NEW ClassType L_PAREN R_PAREN\n    | NEW ClassType L_PAREN ArgumentList R_PARENArgumentList : Expression\n    | ArgumentList COMMA ExpressionArrayCreationExpression : NEW PrimitiveType DimExprs Dims\n    | NEW PrimitiveType DimExprs\n    | NEW ClassType DimExprs Dims\n    | NEW ClassType DimExprsDimExprs : DimExpr\n    | DimExprs DimExprDimExpr : L_SQBR Expression R_SQBRDims : L_SQBR R_SQBR\n    | Dims L_SQBR R_SQBRFieldAccess : Primary DOT IDENTIFIER\n    | SUPER DOT IDENTIFIERMethodInvocation : Name L_PAREN ArgumentList R_PAREN\n    | Name L_PAREN R_PAREN\n    | Primary DOT IDENTIFIER L_PAREN ArgumentList R_PAREN\n    | Primary DOT IDENTIFIER L_PAREN R_PAREN\n    | SUPER DOT IDENTIFIER L_PAREN ArgumentList R_PAREN\n    | SUPER DOT IDENTIFIER L_PAREN R_PARENArrayAccess : Name L_SQBR Expression R_SQBR\n    | PrimaryNoNewArray L_SQBR Expression R_SQBRPostfixExpression : Primary\n    | Name\n    | PostIncrementExpression\n    | PostDecrementExpressionPostIncrementExpression : PostfixExpression INCRPostDecrementExpression : PostfixExpression DECRUnaryExpression : PreIncrementExpression\n    | PreDecrementExpression\n    | PLUS UnaryExpression\n    | MINUS UnaryExpression\n    | UnaryExpressionNotPlusMinusPreIncrementExpression : INCR UnaryExpressionPreDecrementExpression : DECR UnaryExpressionUnaryExpressionNotPlusMinus : PostfixExpression\n    | LOGIC_NOT UnaryExpression\n    | BIT_NOT UnaryExpression\n    | CastExpressionCastExpression : L_PAREN PrimitiveType Dims R_PAREN UnaryExpression\n    | L_PAREN Expression R_PAREN UnaryExpressionNotPlusMinus\n    | L_PAREN PrimitiveType R_PAREN UnaryExpression\n    | L_PAREN Name Dims R_PAREN UnaryExpressionNotPlusMinusMultiplicativeExpression : UnaryExpression\n    | MultiplicativeExpression MULT UnaryExpression\n    | MultiplicativeExpression DIV UnaryExpression\n    | MultiplicativeExpression MOD UnaryExpressionAdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression PLUS MultiplicativeExpression\n    | AdditiveExpression MINUS MultiplicativeExpressionShiftExpression : AdditiveExpression\n    | ShiftExpression LSHIFT AdditiveExpression\n    | ShiftExpression RSHIFT AdditiveExpressionRelationalExpression : ShiftExpression\n    | RelationalExpression LESSER ShiftExpression\n    | RelationalExpression GREATER ShiftExpression\n    | RelationalExpression LESEQ ShiftExpression\n    | RelationalExpression GREQ ShiftExpression\n    | RelationalExpression INSTANCEOF ReferenceTypeEqualityExpression : RelationalExpression\n    | EqualityExpression EQUALS RelationalExpression\n    | EqualityExpression NOTEQ RelationalExpressionAndExpression : EqualityExpression\n    | AndExpression BIT_AND EqualityExpressionExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression BIT_XOR AndExpressionInclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression BIT_OR ExclusiveOrExpressionConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression LOGIC_AND InclusiveOrExpressionConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression LOGIC_OR ConditionalAndExpressionConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression QUES Expression COLON ConditionalExpressionAssignmentExpression : ConditionalExpression\n    | AssignmentAssignment : LeftHandSide AssignmentOperator AssignmentExpressionLeftHandSide : Name\n    | FieldAccess\n    | ArrayAccessAssignmentOperator : ASSIGN\n    | PLUSEQ\n    | MINUSEQ\n    | MULTEQ\n    | DIVEQ\n    | MODEQ\n    | LSHIFTEQ\n    | RSHIFTEQExpression : AssignmentExpressionConstantExpression : Expression'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,8,9,10,11,12,19,20,21,22,23,32,33,35,39,45,46,50,79,80,81,],[-36,0,-1,-33,-34,-35,-47,-39,-40,-42,-43,-46,-30,-31,-32,-38,-41,-29,-37,-44,-55,-53,-54,-58,-45,-52,-57,]),'PACKAGE':([0,],[6,]),'SEMICOLON':([0,3,4,5,7,8,9,10,11,12,19,20,21,22,23,24,25,26,27,28,32,33,35,39,42,43,45,46,48,50,60,68,69,72,79,80,81,84,91,95,96,97,98,99,101,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,135,137,138,139,140,143,144,145,146,147,148,149,158,159,160,161,162,163,164,165,166,167,168,171,172,173,175,176,177,178,184,192,193,194,195,196,197,198,199,200,201,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,238,239,243,244,245,246,247,248,249,262,263,264,266,267,268,269,270,278,279,281,286,287,289,290,291,293,297,327,328,329,330,332,333,334,335,336,340,341,342,343,344,345,346,351,353,356,357,359,363,366,368,369,371,374,375,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,404,405,407,411,412,413,415,416,418,419,421,422,425,428,429,430,431,432,433,436,438,446,449,450,453,455,457,460,461,466,467,469,471,472,473,476,477,479,480,481,482,483,485,487,488,490,491,493,495,498,500,501,503,506,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,530,531,532,533,534,535,536,540,542,544,545,547,549,552,554,557,559,562,],[7,7,7,7,-47,-39,-40,-42,-43,-46,7,7,7,-38,-41,33,-25,-26,-27,35,7,-37,-44,-55,-28,79,-53,-54,-21,-58,94,-19,-20,-21,-45,-52,-57,112,112,182,-73,-87,-91,-89,-74,-114,112,-116,-118,-119,198,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,239,112,244,246,248,-195,-196,-197,-198,-199,-200,-201,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,277,-71,-72,-80,-81,112,112,-69,-70,-23,-24,-22,-115,-117,-120,-121,-91,112,-305,-291,-292,-289,-287,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,333,-144,340,-159,341,-161,342,-163,343,-251,-239,-240,-213,-215,-250,-244,-243,-67,-68,112,-88,-75,-90,-93,-94,-92,-183,-247,-248,-253,-254,405,406,-202,-203,-205,-158,-160,-162,-164,-165,-167,-168,-232,-293,-223,-224,-221,-82,430,432,-76,-111,112,-211,-288,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,112,454,459,-166,-169,-171,-237,-231,-211,-216,-222,-225,-220,-238,472,-107,473,-109,-110,-184,-122,-257,-258,-227,-186,486,112,-206,-145,-217,-226,-234,-236,-106,-108,112,112,507,-256,-228,-259,-290,112,112,-194,112,-146,112,-153,524,-233,-235,-185,528,529,112,-191,112,-193,112,-192,112,-148,-149,-154,112,-156,-157,-170,112,112,539,543,-189,112,-190,-188,-147,-155,548,112,-187,112,112,112,112,112,112,112,112,]),'IMPORT':([0,3,4,8,10,11,19,22,33,35,79,],[13,13,13,-39,-42,-43,13,-38,-37,-44,-45,]),'CLASS':([0,3,4,5,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,30,32,33,35,39,45,46,50,79,80,81,],[15,15,15,15,-47,-39,-40,-42,-43,-46,29,-48,-50,-51,15,15,15,-38,-41,-49,15,-37,-44,-55,-53,-54,-58,-45,-52,-57,]),'FINAL':([0,3,4,5,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,30,32,33,35,39,41,45,46,49,50,51,52,53,54,55,56,57,58,79,80,81,82,83,89,92,93,94,106,170,174,179,182,196,276,277,282,283,364,],[17,17,17,17,-47,-39,-40,-42,-43,-46,17,-48,-50,-51,17,17,17,-38,-41,-49,17,-37,-44,-55,17,-53,-54,17,-58,-60,-61,-62,-63,-64,-65,-51,17,-45,-52,-57,-59,-95,-99,-66,-83,-84,-114,-97,-98,-105,-86,-115,-96,-85,-103,-104,-102,]),'STATIC':([0,3,4,5,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,30,32,33,35,39,41,45,46,49,50,51,52,53,54,55,56,57,58,79,80,81,82,83,89,92,93,94,106,170,174,179,182,196,276,277,282,283,364,],[18,18,18,18,-47,-39,-40,-42,-43,-46,18,-48,-50,-51,18,18,18,-38,-41,-49,18,-37,-44,-55,57,-53,-54,57,-58,-60,-61,-62,-63,-64,-65,-51,18,-45,-52,-57,-59,-95,-99,-66,-83,-84,-114,-97,-98,-105,-86,-115,-96,-85,-103,-104,-102,]),'IDENTIFIER':([6,13,15,16,17,18,25,26,27,29,30,34,36,40,41,42,49,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,83,84,86,87,89,90,91,92,93,94,100,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,137,138,139,140,141,150,152,153,155,170,174,177,178,179,182,183,185,186,191,193,194,195,196,197,198,201,202,203,219,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,273,274,275,276,277,280,281,282,283,284,285,292,295,297,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,333,337,340,341,342,343,344,345,346,355,358,364,374,375,377,380,404,405,406,408,410,411,412,413,414,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[27,27,31,-48,-50,-51,-25,-26,-27,37,-49,42,42,27,27,-28,27,-60,-61,-62,-63,-64,-65,-51,27,98,-25,102,-7,-8,-9,-10,-19,-20,-11,-12,-21,-13,-14,-15,-16,-17,-18,-59,-95,130,98,102,-99,27,130,-66,-83,-84,27,-114,130,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,200,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-27,27,130,243,245,27,27,-21,27,27,27,-97,-98,130,130,-105,-86,200,27,27,200,-23,-24,-22,-115,-117,-120,130,27,27,27,27,27,27,27,27,27,-144,27,-159,-161,-163,27,27,27,-297,-298,-299,-300,-301,-302,-303,-304,27,360,361,27,-96,-85,27,130,-103,-104,27,27,27,27,-183,27,27,27,27,27,385,386,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-21,-158,-160,-162,-164,-165,-167,-168,27,27,-102,443,27,27,27,130,27,27,27,27,-166,-169,-171,27,27,27,27,27,27,-107,-109,27,-184,-122,27,27,27,-186,27,130,27,-145,-106,-108,27,130,443,27,27,130,27,130,-194,130,-146,130,-153,27,-185,27,130,-191,130,-193,130,-192,130,-148,-149,-154,130,-156,-157,-170,443,443,27,27,-189,130,-190,-188,-147,-155,27,443,27,-187,443,443,27,443,443,443,443,443,443,]),'VOID':([16,17,18,30,41,49,51,52,53,54,55,56,57,58,82,83,89,92,93,94,106,170,174,179,182,196,276,277,282,283,364,],[-48,-50,-51,-49,63,63,-60,-61,-62,-63,-64,-65,-51,87,-59,-95,-99,-66,-83,-84,-114,-97,-98,-105,-86,-115,-96,-85,-103,-104,-102,]),'BOOLEAN':([16,17,18,30,41,49,51,52,53,54,55,56,57,58,82,83,84,89,91,92,93,94,100,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,155,170,174,177,178,179,182,185,196,197,198,203,219,238,239,244,246,248,265,276,277,281,282,283,295,297,319,340,341,342,343,344,345,346,364,411,412,413,414,430,432,436,438,453,461,472,473,479,488,491,493,495,503,509,512,514,515,516,518,519,520,523,524,525,531,533,534,535,536,544,],[-48,-50,-51,-49,67,67,-60,-61,-62,-63,-64,-65,-51,67,-59,-95,67,-99,67,-66,-83,-84,67,-114,67,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,67,-97,-98,67,67,-105,-86,67,-115,-117,-120,67,67,67,-144,-159,-161,-163,67,-96,-85,67,-103,-104,67,-183,67,-158,-160,-162,-164,-165,-167,-168,-102,-166,-169,-171,67,-107,-109,-184,-122,-186,-145,-106,-108,67,-194,-146,67,-153,-185,-191,-193,-192,67,-148,-149,-154,67,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'BYTE':([16,17,18,30,41,49,51,52,53,54,55,56,57,58,82,83,84,89,91,92,93,94,100,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,155,170,174,177,178,179,182,185,196,197,198,203,219,238,239,244,246,248,265,276,277,281,282,283,295,297,319,340,341,342,343,344,345,346,364,411,412,413,414,430,432,436,438,453,461,472,473,479,488,491,493,495,503,509,512,514,515,516,518,519,520,523,524,525,531,533,534,535,536,544,],[-48,-50,-51,-49,73,73,-60,-61,-62,-63,-64,-65,-51,73,-59,-95,73,-99,73,-66,-83,-84,73,-114,73,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,73,-97,-98,73,73,-105,-86,73,-115,-117,-120,73,73,73,-144,-159,-161,-163,73,-96,-85,73,-103,-104,73,-183,73,-158,-160,-162,-164,-165,-167,-168,-102,-166,-169,-171,73,-107,-109,-184,-122,-186,-145,-106,-108,73,-194,-146,73,-153,-185,-191,-193,-192,73,-148,-149,-154,73,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'SHORT':([16,17,18,30,41,49,51,52,53,54,55,56,57,58,82,83,84,89,91,92,93,94,100,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,155,170,174,177,178,179,182,185,196,197,198,203,219,238,239,244,246,248,265,276,277,281,282,283,295,297,319,340,341,342,343,344,345,346,364,411,412,413,414,430,432,436,438,453,461,472,473,479,488,491,493,495,503,509,512,514,515,516,518,519,520,523,524,525,531,533,534,535,536,544,],[-48,-50,-51,-49,74,74,-60,-61,-62,-63,-64,-65,-51,74,-59,-95,74,-99,74,-66,-83,-84,74,-114,74,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,74,-97,-98,74,74,-105,-86,74,-115,-117,-120,74,74,74,-144,-159,-161,-163,74,-96,-85,74,-103,-104,74,-183,74,-158,-160,-162,-164,-165,-167,-168,-102,-166,-169,-171,74,-107,-109,-184,-122,-186,-145,-106,-108,74,-194,-146,74,-153,-185,-191,-193,-192,74,-148,-149,-154,74,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'INT':([16,17,18,30,41,49,51,52,53,54,55,56,57,58,82,83,84,89,91,92,93,94,100,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,155,170,174,177,178,179,182,185,196,197,198,203,219,238,239,244,246,248,265,276,277,281,282,283,295,297,319,340,341,342,343,344,345,346,364,411,412,413,414,430,432,436,438,453,461,472,473,479,488,491,493,495,503,509,512,514,515,516,518,519,520,523,524,525,531,533,534,535,536,544,],[-48,-50,-51,-49,75,75,-60,-61,-62,-63,-64,-65,-51,75,-59,-95,75,-99,75,-66,-83,-84,75,-114,75,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,75,-97,-98,75,75,-105,-86,75,-115,-117,-120,75,75,75,-144,-159,-161,-163,75,-96,-85,75,-103,-104,75,-183,75,-158,-160,-162,-164,-165,-167,-168,-102,-166,-169,-171,75,-107,-109,-184,-122,-186,-145,-106,-108,75,-194,-146,75,-153,-185,-191,-193,-192,75,-148,-149,-154,75,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'CHAR':([16,17,18,30,41,49,51,52,53,54,55,56,57,58,82,83,84,89,91,92,93,94,100,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,155,170,174,177,178,179,182,185,196,197,198,203,219,238,239,244,246,248,265,276,277,281,282,283,295,297,319,340,341,342,343,344,345,346,364,411,412,413,414,430,432,436,438,453,461,472,473,479,488,491,493,495,503,509,512,514,515,516,518,519,520,523,524,525,531,533,534,535,536,544,],[-48,-50,-51,-49,76,76,-60,-61,-62,-63,-64,-65,-51,76,-59,-95,76,-99,76,-66,-83,-84,76,-114,76,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,76,-97,-98,76,76,-105,-86,76,-115,-117,-120,76,76,76,-144,-159,-161,-163,76,-96,-85,76,-103,-104,76,-183,76,-158,-160,-162,-164,-165,-167,-168,-102,-166,-169,-171,76,-107,-109,-184,-122,-186,-145,-106,-108,76,-194,-146,76,-153,-185,-191,-193,-192,76,-148,-149,-154,76,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'FLOAT':([16,17,18,30,41,49,51,52,53,54,55,56,57,58,82,83,84,89,91,92,93,94,100,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,155,170,174,177,178,179,182,185,196,197,198,203,219,238,239,244,246,248,265,276,277,281,282,283,295,297,319,340,341,342,343,344,345,346,364,411,412,413,414,430,432,436,438,453,461,472,473,479,488,491,493,495,503,509,512,514,515,516,518,519,520,523,524,525,531,533,534,535,536,544,],[-48,-50,-51,-49,77,77,-60,-61,-62,-63,-64,-65,-51,77,-59,-95,77,-99,77,-66,-83,-84,77,-114,77,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,77,-97,-98,77,77,-105,-86,77,-115,-117,-120,77,77,77,-144,-159,-161,-163,77,-96,-85,77,-103,-104,77,-183,77,-158,-160,-162,-164,-165,-167,-168,-102,-166,-169,-171,77,-107,-109,-184,-122,-186,-145,-106,-108,77,-194,-146,77,-153,-185,-191,-193,-192,77,-148,-149,-154,77,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'DOUBLE':([16,17,18,30,41,49,51,52,53,54,55,56,57,58,82,83,84,89,91,92,93,94,100,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,155,170,174,177,178,179,182,185,196,197,198,203,219,238,239,244,246,248,265,276,277,281,282,283,295,297,319,340,341,342,343,344,345,346,364,411,412,413,414,430,432,436,438,453,461,472,473,479,488,491,493,495,503,509,512,514,515,516,518,519,520,523,524,525,531,533,534,535,536,544,],[-48,-50,-51,-49,78,78,-60,-61,-62,-63,-64,-65,-51,78,-59,-95,78,-99,78,-66,-83,-84,78,-114,78,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,78,-97,-98,78,78,-105,-86,78,-115,-117,-120,78,78,78,-144,-159,-161,-163,78,-96,-85,78,-103,-104,78,-183,78,-158,-160,-162,-164,-165,-167,-168,-102,-166,-169,-171,78,-107,-109,-184,-122,-186,-145,-106,-108,78,-194,-146,78,-153,-185,-191,-193,-192,78,-148,-149,-154,78,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'DOT':([24,25,26,27,28,42,48,62,72,130,148,149,150,156,157,158,159,160,161,162,163,164,165,166,167,168,180,181,210,212,213,214,216,217,242,263,264,266,267,301,302,337,351,356,357,359,360,361,375,385,386,415,416,418,419,421,422,425,428,443,450,466,467,469,471,481,500,501,],[34,-25,-26,-27,36,-28,34,-25,34,-27,-212,-214,34,273,274,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-210,274,34,308,309,-207,-212,-214,34,308,34,-213,-215,34,-211,34,-232,-223,-224,-221,-229,-230,-211,-229,-230,-237,-231,-211,-216,-222,-225,-220,-238,-27,-227,-217,-226,-234,-236,-228,-233,-235,]),'BLOCK_OPENER':([25,26,27,31,37,38,42,44,47,48,57,59,60,84,85,88,91,96,101,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,142,169,172,173,175,176,177,178,184,186,189,192,196,197,198,201,239,244,246,248,278,279,281,287,292,294,297,340,341,342,343,344,345,346,347,363,369,374,404,409,411,412,413,430,432,434,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,499,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[-25,-26,-27,41,41,41,-28,41,-56,-21,84,91,84,84,91,91,84,-73,-74,-114,84,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,84,84,91,-71,-72,-80,-81,84,84,-69,292,-101,-70,-115,-117,-120,84,-144,-159,-161,-163,-67,-68,84,-75,292,-100,-183,-158,-160,-162,-164,-165,-167,-168,84,-82,-76,84,84,462,-166,-169,-171,-107,-109,292,-184,-122,-186,84,-145,-106,-108,84,84,84,84,-194,84,-146,84,-153,84,-185,84,-191,84,-193,84,-192,84,-148,-149,-154,84,-156,-157,-170,84,84,-189,84,-190,-188,-147,-155,84,-187,84,84,84,84,84,84,84,84,]),'L_SQBR':([25,26,27,42,48,62,64,66,67,69,70,71,72,73,74,75,76,77,78,98,99,130,148,149,150,158,159,160,162,163,164,165,166,167,168,180,193,194,195,200,210,214,216,217,242,264,266,267,271,272,293,296,300,301,302,312,337,351,356,357,359,360,361,375,376,379,385,386,396,415,416,418,419,421,422,425,428,443,450,466,467,469,471,481,500,501,],[-25,-26,-27,-28,-21,-25,103,-9,-10,104,-11,-12,105,-13,-14,-15,-16,-17,-18,-91,187,-27,-212,-214,251,-213,-215,275,-209,-210,-2,-3,-4,-5,-6,-210,-23,-24,-22,-91,306,275,-212,-214,306,306,-213,-215,358,358,-92,187,378,380,-211,358,251,-232,423,-224,423,-229,-230,-211,448,448,-229,-230,103,-237,-231,-211,-216,448,-225,448,-238,-27,-227,-217,-226,-234,-236,-228,-233,-235,]),'L_PAREN':([25,26,27,42,48,62,84,91,98,102,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,141,150,152,153,177,178,180,181,186,196,197,198,201,202,203,210,225,226,232,233,237,238,239,240,242,244,246,248,251,252,253,254,255,256,257,258,259,260,261,264,265,271,275,281,284,285,292,297,301,303,304,305,306,307,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,333,337,339,340,341,342,343,344,345,346,348,355,358,360,361,374,375,377,380,385,386,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,435,436,438,443,444,445,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[-25,-26,-27,-28,-21,100,132,132,185,185,-114,132,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-27,202,203,237,238,240,132,203,203,252,265,265,132,132,284,285,203,-115,-117,-120,132,203,203,252,265,265,265,265,203,132,-144,203,252,-159,-161,-163,203,203,203,-297,-298,-299,-300,-301,-302,-303,-304,252,203,355,203,132,203,203,203,-183,252,203,265,265,203,265,265,265,355,265,265,265,265,265,265,265,265,265,265,265,265,265,203,252,410,-158,-160,-162,-164,-165,-167,-168,414,203,203,426,427,132,265,265,203,426,427,132,203,132,132,203,-166,-169,-171,203,265,203,203,203,-107,-109,203,475,-184,-122,-27,478,479,265,265,265,-186,132,132,132,-145,-106,-108,203,132,132,203,132,132,132,132,-194,132,-146,132,-153,203,-185,203,132,-191,132,-193,132,-192,132,-148,-149,-154,132,-156,-157,-170,132,132,203,132,-189,132,-190,-188,-147,-155,132,132,132,-187,132,132,132,132,132,132,132,132,132,]),'ASSIGN':([25,26,27,42,98,99,130,150,151,158,159,200,210,242,293,301,337,360,361,385,386,415,428,443,],[-25,-26,-27,-28,-91,186,-27,-294,254,-295,-296,-91,-294,-294,-92,-294,-294,-229,-230,-229,-230,-237,-238,-27,]),'PLUSEQ':([25,26,27,42,130,150,151,158,159,210,242,301,337,360,361,385,386,415,428,443,],[-25,-26,-27,-28,-27,-294,255,-295,-296,-294,-294,-294,-294,-229,-230,-229,-230,-237,-238,-27,]),'MINUSEQ':([25,26,27,42,130,150,151,158,159,210,242,301,337,360,361,385,386,415,428,443,],[-25,-26,-27,-28,-27,-294,256,-295,-296,-294,-294,-294,-294,-229,-230,-229,-230,-237,-238,-27,]),'MULTEQ':([25,26,27,42,130,150,151,158,159,210,242,301,337,360,361,385,386,415,428,443,],[-25,-26,-27,-28,-27,-294,257,-295,-296,-294,-294,-294,-294,-229,-230,-229,-230,-237,-238,-27,]),'DIVEQ':([25,26,27,42,130,150,151,158,159,210,242,301,337,360,361,385,386,415,428,443,],[-25,-26,-27,-28,-27,-294,258,-295,-296,-294,-294,-294,-294,-229,-230,-229,-230,-237,-238,-27,]),'MODEQ':([25,26,27,42,130,150,151,158,159,210,242,301,337,360,361,385,386,415,428,443,],[-25,-26,-27,-28,-27,-294,259,-295,-296,-294,-294,-294,-294,-229,-230,-229,-230,-237,-238,-27,]),'LSHIFTEQ':([25,26,27,42,130,150,151,158,159,210,242,301,337,360,361,385,386,415,428,443,],[-25,-26,-27,-28,-27,-294,260,-295,-296,-294,-294,-294,-294,-229,-230,-229,-230,-237,-238,-27,]),'RSHIFTEQ':([25,26,27,42,130,150,151,158,159,210,242,301,337,360,361,385,386,415,428,443,],[-25,-26,-27,-28,-27,-294,261,-295,-296,-294,-294,-294,-294,-229,-230,-229,-230,-237,-238,-27,]),'DECR':([25,26,27,42,84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,132,137,140,141,146,147,148,149,150,152,153,154,156,158,159,160,161,162,163,164,165,166,167,168,177,178,180,186,196,197,198,201,202,203,210,212,214,216,217,225,226,231,232,233,235,236,237,238,239,240,242,244,246,248,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,269,270,275,281,284,285,292,297,301,302,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,337,340,341,342,343,344,345,346,351,355,356,357,358,359,360,361,374,375,377,380,385,386,404,405,406,408,410,411,412,413,415,416,417,418,419,421,422,423,425,426,427,428,430,432,434,436,438,443,447,450,452,453,454,457,459,461,466,467,469,471,472,473,475,476,477,478,479,481,485,486,487,488,490,491,493,495,496,500,501,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[-25,-26,-27,-28,152,152,-114,152,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-27,152,152,152,152,-242,-241,-212,-214,-240,152,152,269,-239,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,152,152,-210,152,-115,-117,-120,152,152,152,-240,-239,-207,-212,-214,152,152,269,152,152,-241,-242,152,152,-144,152,-240,-159,-161,-163,152,152,152,-297,-298,-299,-300,-301,-302,-303,-304,-239,-240,152,-213,-215,-244,-243,152,152,152,152,152,-183,-240,-211,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-240,-158,-160,-162,-164,-165,-167,-168,-232,152,-223,-224,152,-221,-229,-230,152,-211,152,152,-229,-230,152,152,152,152,152,-166,-169,-171,-237,-231,152,-211,-216,-222,-225,152,-220,152,152,-238,-107,-109,152,-184,-122,-27,152,-227,152,-186,152,152,152,-145,-217,-226,-234,-236,-106,-108,152,152,152,152,152,-228,152,152,152,-194,152,-146,152,-153,152,-233,-235,-185,152,152,-191,152,-193,152,-192,152,-148,-149,-154,152,-156,-157,-170,152,152,152,152,-189,152,-190,-188,-147,-155,152,152,152,-187,152,152,152,152,152,152,152,152,152,]),'INCR':([25,26,27,42,84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,132,137,140,141,146,147,148,149,150,152,153,154,156,158,159,160,161,162,163,164,165,166,167,168,177,178,180,186,196,197,198,201,202,203,210,212,214,216,217,225,226,231,232,233,235,236,237,238,239,240,242,244,246,248,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,269,270,275,281,284,285,292,297,301,302,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,337,340,341,342,343,344,345,346,351,355,356,357,358,359,360,361,374,375,377,380,385,386,404,405,406,408,410,411,412,413,415,416,417,418,419,421,422,423,425,426,427,428,430,432,434,436,438,443,447,450,452,453,454,457,459,461,466,467,469,471,472,473,475,476,477,478,479,481,485,486,487,488,490,491,493,495,496,500,501,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[-25,-26,-27,-28,153,153,-114,153,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-27,153,153,153,153,-242,-241,-212,-214,-240,153,153,270,-239,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,153,153,-210,153,-115,-117,-120,153,153,153,-240,-239,-207,-212,-214,153,153,270,153,153,-241,-242,153,153,-144,153,-240,-159,-161,-163,153,153,153,-297,-298,-299,-300,-301,-302,-303,-304,-239,-240,153,-213,-215,-244,-243,153,153,153,153,153,-183,-240,-211,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-240,-158,-160,-162,-164,-165,-167,-168,-232,153,-223,-224,153,-221,-229,-230,153,-211,153,153,-229,-230,153,153,153,153,153,-166,-169,-171,-237,-231,153,-211,-216,-222,-225,153,-220,153,153,-238,-107,-109,153,-184,-122,-27,153,-227,153,-186,153,153,153,-145,-217,-226,-234,-236,-106,-108,153,153,153,153,153,-228,153,153,153,-194,153,-146,153,-153,153,-233,-235,-185,153,153,-191,153,-193,153,-192,153,-148,-149,-154,153,-156,-157,-170,153,153,153,153,-189,153,-190,-188,-147,-155,153,153,153,-187,153,153,153,153,153,153,153,153,153,]),'COMMA':([25,26,27,42,48,68,69,72,95,97,98,99,143,144,145,146,147,148,149,158,159,160,161,162,163,164,165,166,167,168,171,175,176,188,190,193,194,195,199,200,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,286,288,289,290,291,293,296,327,328,329,330,334,336,350,351,352,353,356,357,359,363,365,367,370,371,372,373,375,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,420,421,422,425,428,433,446,449,450,458,460,465,466,467,468,469,470,471,474,480,481,482,483,500,501,],[-25,-26,-27,-28,-21,-19,-20,-21,183,-87,-91,-89,-195,-196,-197,-198,-199,-200,-201,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,183,280,-81,295,-77,-23,-24,-22,183,-91,-305,-291,-292,-289,-287,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-88,295,-90,-93,-94,-92,-79,-247,-248,-253,-254,408,-205,417,-232,-218,-293,-223,-224,-221,-82,417,417,434,-111,-112,-78,-211,-288,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,417,-222,-225,-220,-238,-110,-257,-258,-227,408,-206,-219,-217,-226,417,-234,417,-236,-113,-256,-228,-259,-290,-233,-235,]),'MULT':([25,26,27,36,42,158,159,160,161,162,163,164,165,166,167,168,210,212,214,216,217,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,43,-28,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-240,-239,-207,-212,-214,324,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,324,324,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'DIV':([25,26,27,42,158,159,160,161,162,163,164,165,166,167,168,210,212,214,216,217,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-240,-239,-207,-212,-214,325,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,325,325,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'MOD':([25,26,27,42,158,159,160,161,162,163,164,165,166,167,168,210,212,214,216,217,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-240,-239,-207,-212,-214,326,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,326,326,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'PLUS':([25,26,27,42,132,140,141,152,153,158,159,160,161,162,163,164,165,166,167,168,186,202,203,210,212,214,216,217,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,275,284,285,292,301,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,333,351,355,356,357,358,359,375,377,380,385,386,397,398,399,400,401,402,403,405,410,415,416,417,418,419,421,422,423,425,426,427,428,434,446,447,449,450,452,466,467,469,471,475,478,480,481,482,496,500,501,507,528,],[-25,-26,-27,-28,225,225,225,225,225,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,225,225,225,-240,-239,-207,-212,-214,322,-264,225,225,-260,-245,-246,-249,-252,225,225,-255,-241,-242,225,225,225,225,225,-297,-298,-299,-300,-301,-302,-303,-304,-251,-239,-240,225,-213,-215,-250,-244,-243,225,225,225,225,-240,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,-247,-248,-253,-254,225,-232,225,-223,-224,225,-221,-211,225,225,-229,-230,322,322,-265,-266,-261,-262,-263,225,225,-237,-231,225,-211,-216,-222,-225,225,-220,225,225,-238,225,-257,225,-258,-227,225,-217,-226,-234,-236,225,225,-256,-228,-259,225,-233,-235,225,225,]),'MINUS':([25,26,27,42,132,140,141,152,153,158,159,160,161,162,163,164,165,166,167,168,186,202,203,210,212,214,216,217,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,275,284,285,292,301,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,333,351,355,356,357,358,359,375,377,380,385,386,397,398,399,400,401,402,403,405,410,415,416,417,418,419,421,422,423,425,426,427,428,434,446,447,449,450,452,466,467,469,471,475,478,480,481,482,496,500,501,507,528,],[-25,-26,-27,-28,226,226,226,226,226,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,226,226,226,-240,-239,-207,-212,-214,323,-264,226,226,-260,-245,-246,-249,-252,226,226,-255,-241,-242,226,226,226,226,226,-297,-298,-299,-300,-301,-302,-303,-304,-251,-239,-240,226,-213,-215,-250,-244,-243,226,226,226,226,-240,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,-247,-248,-253,-254,226,-232,226,-223,-224,226,-221,-211,226,226,-229,-230,323,323,-265,-266,-261,-262,-263,226,226,-237,-231,226,-211,-216,-222,-225,226,-220,226,226,-238,226,-257,226,-258,-227,226,-217,-226,-234,-236,226,226,-256,-228,-259,226,-233,-235,226,226,]),'LSHIFT':([25,26,27,42,158,159,160,161,162,163,164,165,166,167,168,210,212,214,216,217,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,391,392,393,394,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-240,-239,-207,-212,-214,320,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,320,320,320,320,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'RSHIFT':([25,26,27,42,158,159,160,161,162,163,164,165,166,167,168,210,212,214,216,217,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,391,392,393,394,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-240,-239,-207,-212,-214,321,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,321,321,321,321,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'LESSER':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,216,217,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,-212,-214,315,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,315,315,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'GREATER':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,216,217,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,-212,-214,316,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,316,316,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'LESEQ':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,216,217,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,-212,-214,317,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,317,317,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'GREQ':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,216,217,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,-212,-214,318,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,318,318,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'INSTANCEOF':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,216,217,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,-212,-214,319,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,319,319,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'EQUALS':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,216,217,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,-212,-214,313,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,313,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'NOTEQ':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,216,217,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,-212,-214,314,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,314,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'BIT_AND':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,-212,-214,311,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-229,-230,311,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'BIT_XOR':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,-239,-207,310,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,310,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'BIT_OR':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-240,307,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,307,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'LOGIC_AND':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,305,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,305,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'QUES':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,208,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,303,-287,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-288,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'LOGIC_OR':([25,26,27,42,68,69,72,158,159,160,161,162,163,164,165,166,167,168,193,194,195,208,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,301,327,328,329,330,351,356,357,359,375,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,446,449,450,466,467,469,471,480,481,482,500,501,],[-25,-26,-27,-28,-19,-20,-21,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,304,-287,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-240,-247,-248,-253,-254,-232,-223,-224,-221,-211,-288,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-233,-235,]),'R_PAREN':([25,26,27,42,66,67,68,69,70,71,72,73,74,75,76,77,78,100,143,144,145,146,147,148,149,158,159,160,161,162,163,164,165,166,167,168,185,188,190,193,194,195,200,204,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,252,262,263,264,266,267,268,269,270,284,285,288,293,296,298,299,300,301,327,328,329,330,331,336,338,350,351,352,353,354,355,356,357,359,365,367,373,375,376,379,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,406,415,416,418,419,420,421,422,425,426,427,428,446,449,450,454,456,458,459,460,463,464,465,466,467,468,469,470,471,480,481,482,483,484,486,489,500,501,502,505,510,529,539,541,543,546,548,551,556,],[-25,-26,-27,-28,-9,-10,-19,-20,-11,-12,-21,-13,-14,-15,-16,-17,-18,189,-195,-196,-197,-198,-199,-200,-201,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,287,294,-77,-23,-24,-22,-91,302,-305,-291,-292,-289,-287,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,351,-251,-239,-240,-213,-215,-250,-244,-243,366,368,369,-92,-79,374,375,377,-240,-247,-248,-253,-254,404,-205,409,416,-232,-218,-293,418,419,-223,-224,-221,429,431,-78,-211,447,451,-288,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,457,-237,-231,-211,-216,466,-222,-225,-220,469,471,-238,-257,-258,-227,485,487,-204,490,-206,498,499,-219,-217,-226,500,-234,501,-236,-256,-228,-259,-290,508,511,513,-233,-235,526,527,532,542,547,549,552,554,557,559,562,]),'R_SQBR':([25,26,27,42,68,69,72,103,104,105,158,159,160,161,162,163,164,165,166,167,168,187,193,194,195,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,251,262,263,264,266,267,268,269,270,327,328,329,330,349,351,353,356,357,359,362,375,378,380,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,423,424,425,428,446,448,449,450,466,467,469,471,480,481,482,483,500,501,],[-25,-26,-27,-28,-19,-20,-21,193,194,195,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,293,-23,-24,-22,-305,-291,-292,-289,-287,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,195,-251,-239,-240,-213,-215,-250,-244,-243,-247,-248,-253,-254,415,-232,-293,-223,-224,-221,428,-211,450,450,-288,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,450,467,-220,-238,-257,481,-258,-227,-217,-226,-234,-236,-256,-228,-259,-290,-233,-235,]),'BLOCK_CLOSER':([25,26,27,41,42,49,51,52,53,54,55,56,68,69,72,82,83,84,89,91,92,93,94,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,158,159,160,161,162,163,164,165,166,167,168,170,174,177,178,179,182,193,194,195,196,197,198,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,239,244,246,248,262,263,264,266,267,268,269,270,276,277,281,282,283,290,291,292,297,327,328,329,330,340,341,342,343,344,345,346,351,353,356,357,359,364,370,371,372,375,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,411,412,413,415,416,418,419,421,422,425,428,430,432,433,436,438,446,449,450,453,461,462,466,467,469,471,472,473,474,480,481,482,483,488,491,492,493,494,495,500,501,503,509,512,514,515,516,517,518,519,520,523,524,525,531,533,534,535,536,544,],[-25,-26,-27,50,-28,81,-60,-61,-62,-63,-64,-65,-19,-20,-21,-59,-95,106,-99,179,-66,-83,-84,-114,196,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-97,-98,282,283,-105,-86,-23,-24,-22,-115,-117,-120,-305,-291,-292,-289,-287,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-144,-159,-161,-163,-251,-239,-240,-213,-215,-250,-244,-243,-96,-85,364,-103,-104,-93,-94,371,-183,-247,-248,-253,-254,-158,-160,-162,-164,-165,-167,-168,-232,-293,-223,-224,-221,-102,433,-111,-112,-211,-288,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-166,-169,-171,-237,-231,-211,-216,-222,-225,-220,-238,-107,-109,-110,-184,-122,-257,-258,-227,-186,-145,491,-217,-226,-234,-236,-106,-108,-113,-256,-228,-259,-290,-194,-146,516,518,-150,-153,-233,-235,-185,-191,-193,-192,535,-148,-151,-149,-154,-152,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'COLON':([25,26,27,42,68,69,72,130,158,159,160,161,162,163,164,165,166,167,168,193,194,195,205,206,207,208,209,210,211,212,214,215,216,217,218,220,221,222,223,224,227,228,229,230,231,234,235,236,262,263,264,266,267,268,269,270,327,328,329,330,351,353,356,357,359,375,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,415,416,418,419,421,422,425,428,443,446,449,450,466,467,469,471,480,481,482,483,497,500,501,521,522,],[-25,-26,-27,-28,-19,-20,-21,201,-213,-215,-207,-208,-209,-210,-2,-3,-4,-5,-6,-23,-24,-22,-305,-291,-292,-289,-287,-240,-285,-239,-207,-283,-212,-214,-281,-279,-276,-270,-267,-264,-260,-245,-246,-249,-252,-255,-241,-242,-251,-239,-240,-213,-215,-250,-244,-243,-247,-248,-253,-254,-232,-293,-223,-224,-221,-211,452,-288,-286,-284,-229,-230,-282,-280,-277,-278,-271,-272,-273,-274,-275,-268,-269,-265,-266,-261,-262,-263,-237,-231,-211,-216,-222,-225,-220,-238,477,-257,-258,-227,-217,-226,-234,-236,-256,-228,-259,-290,523,-233,-235,536,-306,]),'EXTENDS':([31,37,],[40,40,]),'THROWS':([59,85,96,101,172,173,189,287,294,369,],[90,90,90,90,90,90,-101,-75,-100,-76,]),'IF':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[131,131,-114,131,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,131,131,131,-115,-117,-120,131,-144,-159,-161,-163,131,-183,-158,-160,-162,-164,-165,-167,-168,435,131,-166,-169,-171,-107,-109,-184,-122,-186,131,-145,-106,-108,131,435,131,131,-194,131,-146,131,-153,-185,131,-191,131,-193,131,-192,131,-148,-149,-154,131,-156,-157,-170,435,435,-189,131,-190,-188,-147,-155,435,-187,435,435,435,435,435,435,435,435,]),'WHILE':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,241,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[133,133,-114,133,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,133,133,133,-115,-117,-120,133,-144,339,-159,-161,-163,133,-183,-158,-160,-162,-164,-165,-167,-168,444,133,-166,-169,-171,-107,-109,-184,-122,-186,133,-145,-106,-108,133,444,133,133,-194,133,-146,133,-153,-185,133,-191,133,-193,133,-192,133,-148,-149,-154,133,-156,-157,-170,444,444,-189,133,-190,-188,-147,-155,444,-187,444,444,444,444,444,444,444,444,]),'FOR':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[134,134,-114,134,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,134,134,134,-115,-117,-120,134,-144,-159,-161,-163,134,-183,-158,-160,-162,-164,-165,-167,-168,445,134,-166,-169,-171,-107,-109,-184,-122,-186,134,-145,-106,-108,134,445,134,134,-194,134,-146,134,-153,-185,134,-191,134,-193,134,-192,134,-148,-149,-154,134,-156,-157,-170,445,445,-189,134,-190,-188,-147,-155,445,-187,445,445,445,445,445,445,445,445,]),'SWITCH':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[136,136,-114,136,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,136,136,136,-115,-117,-120,136,-144,-159,-161,-163,136,-183,-158,-160,-162,-164,-165,-167,-168,136,136,-166,-169,-171,-107,-109,-184,-122,-186,136,-145,-106,-108,136,136,136,136,-194,136,-146,136,-153,-185,136,-191,136,-193,136,-192,136,-148,-149,-154,136,-156,-157,-170,136,136,-189,136,-190,-188,-147,-155,136,-187,136,136,136,136,136,136,136,136,]),'DO':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[137,137,-114,137,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,137,137,137,-115,-117,-120,137,-144,-159,-161,-163,137,-183,-158,-160,-162,-164,-165,-167,-168,137,137,-166,-169,-171,-107,-109,-184,-122,-186,137,-145,-106,-108,137,137,137,137,-194,137,-146,137,-153,-185,137,-191,137,-193,137,-192,137,-148,-149,-154,137,-156,-157,-170,137,137,-189,137,-190,-188,-147,-155,137,-187,137,137,137,137,137,137,137,137,]),'BREAK':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[138,138,-114,138,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,138,138,138,-115,-117,-120,138,-144,-159,-161,-163,138,-183,-158,-160,-162,-164,-165,-167,-168,138,138,-166,-169,-171,-107,-109,-184,-122,-186,138,-145,-106,-108,138,138,138,138,-194,138,-146,138,-153,-185,138,-191,138,-193,138,-192,138,-148,-149,-154,138,-156,-157,-170,138,138,-189,138,-190,-188,-147,-155,138,-187,138,138,138,138,138,138,138,138,]),'CONTINUE':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[139,139,-114,139,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,139,139,139,-115,-117,-120,139,-144,-159,-161,-163,139,-183,-158,-160,-162,-164,-165,-167,-168,139,139,-166,-169,-171,-107,-109,-184,-122,-186,139,-145,-106,-108,139,139,139,139,-194,139,-146,139,-153,-185,139,-191,139,-193,139,-192,139,-148,-149,-154,139,-156,-157,-170,139,139,-189,139,-190,-188,-147,-155,139,-187,139,139,139,139,139,139,139,139,]),'RETURN':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[140,140,-114,140,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,140,140,140,-115,-117,-120,140,-144,-159,-161,-163,140,-183,-158,-160,-162,-164,-165,-167,-168,140,140,-166,-169,-171,-107,-109,-184,-122,-186,140,-145,-106,-108,140,140,140,140,-194,140,-146,140,-153,-185,140,-191,140,-193,140,-192,140,-148,-149,-154,140,-156,-157,-170,140,140,-189,140,-190,-188,-147,-155,140,-187,140,140,140,140,140,140,140,140,]),'THROW':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[141,141,-114,141,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,141,141,141,-115,-117,-120,141,-144,-159,-161,-163,141,-183,-158,-160,-162,-164,-165,-167,-168,141,141,-166,-169,-171,-107,-109,-184,-122,-186,141,-145,-106,-108,141,141,141,141,-194,141,-146,141,-153,-185,141,-191,141,-193,141,-192,141,-148,-149,-154,141,-156,-157,-170,141,141,-189,141,-190,-188,-147,-155,141,-187,141,141,141,141,141,141,141,141,]),'TRY':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,137,177,178,196,197,198,201,239,244,246,248,281,297,340,341,342,343,344,345,346,374,404,411,412,413,430,432,436,438,453,457,461,472,473,476,477,485,487,488,490,491,493,495,503,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,531,532,533,534,535,536,542,544,545,547,549,552,554,557,559,562,],[142,142,-114,142,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,142,142,142,-115,-117,-120,142,-144,-159,-161,-163,142,-183,-158,-160,-162,-164,-165,-167,-168,142,142,-166,-169,-171,-107,-109,-184,-122,-186,142,-145,-106,-108,142,142,142,142,-194,142,-146,142,-153,-185,142,-191,142,-193,142,-192,142,-148,-149,-154,142,-156,-157,-170,142,142,-189,142,-190,-188,-147,-155,142,-187,142,142,142,142,142,142,142,142,]),'NEW':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,137,140,141,152,153,177,178,186,196,197,198,201,202,203,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,275,281,284,285,292,297,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,340,341,342,343,344,345,346,355,358,374,375,377,380,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[155,155,-114,155,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,219,155,219,219,219,219,155,155,219,-115,-117,-120,155,219,219,219,219,219,219,219,155,-144,219,-159,-161,-163,219,219,219,-297,-298,-299,-300,-301,-302,-303,-304,219,219,155,219,219,219,-183,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,-158,-160,-162,-164,-165,-167,-168,219,219,155,219,219,219,155,219,155,155,219,-166,-169,-171,219,219,219,219,219,-107,-109,219,-184,-122,219,219,219,-186,155,155,155,-145,-106,-108,219,155,155,219,155,155,155,155,-194,155,-146,155,-153,219,-185,219,155,-191,155,-193,155,-192,155,-148,-149,-154,155,-156,-157,-170,155,155,219,155,-189,155,-190,-188,-147,-155,155,155,155,-187,155,155,155,155,155,155,155,155,155,]),'SUPER':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,137,140,141,152,153,177,178,186,196,197,198,201,202,203,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,275,281,284,285,292,297,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,340,341,342,343,344,345,346,355,358,374,375,377,380,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[157,181,-114,157,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,213,157,213,213,213,213,157,157,213,-115,-117,-120,157,213,213,213,213,213,213,213,157,-144,213,-159,-161,-163,213,213,213,-297,-298,-299,-300,-301,-302,-303,-304,213,213,157,213,213,213,-183,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,-158,-160,-162,-164,-165,-167,-168,213,213,157,213,213,213,157,213,157,157,213,-166,-169,-171,213,213,213,213,213,-107,-109,213,-184,-122,213,213,213,-186,157,157,157,-145,-106,-108,213,157,157,213,157,157,157,157,-194,157,-146,157,-153,213,-185,213,157,-191,157,-193,157,-192,157,-148,-149,-154,157,-156,-157,-170,157,157,213,157,-189,157,-190,-188,-147,-155,157,157,157,-187,157,157,157,157,157,157,157,157,157,]),'THIS':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,137,140,141,152,153,177,178,186,196,197,198,201,202,203,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,275,281,284,285,292,297,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,340,341,342,343,344,345,346,355,358,374,375,377,380,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[163,180,-114,163,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,163,163,163,163,163,163,163,163,163,-115,-117,-120,163,163,163,163,163,163,163,163,163,-144,163,-159,-161,-163,163,163,163,-297,-298,-299,-300,-301,-302,-303,-304,163,163,163,163,163,163,-183,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-158,-160,-162,-164,-165,-167,-168,163,163,163,163,163,163,163,163,163,163,163,-166,-169,-171,163,163,163,163,163,-107,-109,163,-184,-122,163,163,163,-186,163,163,163,-145,-106,-108,163,163,163,163,163,163,163,163,-194,163,-146,163,-153,163,-185,163,163,-191,163,-193,163,-192,163,-148,-149,-154,163,-156,-157,-170,163,163,163,163,-189,163,-190,-188,-147,-155,163,163,163,-187,163,163,163,163,163,163,163,163,163,]),'INT_CONSTANT':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,137,140,141,152,153,177,178,186,196,197,198,201,202,203,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,275,281,284,285,292,297,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,340,341,342,343,344,345,346,355,358,374,375,377,380,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[164,164,-114,164,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,164,164,164,164,164,164,164,164,164,-115,-117,-120,164,164,164,164,164,164,164,164,164,-144,164,-159,-161,-163,164,164,164,-297,-298,-299,-300,-301,-302,-303,-304,164,164,164,164,164,164,-183,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-158,-160,-162,-164,-165,-167,-168,164,164,164,164,164,164,164,164,164,164,164,-166,-169,-171,164,164,164,164,164,-107,-109,164,-184,-122,164,164,164,-186,164,164,164,-145,-106,-108,164,164,164,164,164,164,164,164,-194,164,-146,164,-153,164,-185,164,164,-191,164,-193,164,-192,164,-148,-149,-154,164,-156,-157,-170,164,164,164,164,-189,164,-190,-188,-147,-155,164,164,164,-187,164,164,164,164,164,164,164,164,164,]),'FLOAT_CONSTANT':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,137,140,141,152,153,177,178,186,196,197,198,201,202,203,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,275,281,284,285,292,297,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,340,341,342,343,344,345,346,355,358,374,375,377,380,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[165,165,-114,165,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,165,165,165,165,165,165,165,165,165,-115,-117,-120,165,165,165,165,165,165,165,165,165,-144,165,-159,-161,-163,165,165,165,-297,-298,-299,-300,-301,-302,-303,-304,165,165,165,165,165,165,-183,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-158,-160,-162,-164,-165,-167,-168,165,165,165,165,165,165,165,165,165,165,165,-166,-169,-171,165,165,165,165,165,-107,-109,165,-184,-122,165,165,165,-186,165,165,165,-145,-106,-108,165,165,165,165,165,165,165,165,-194,165,-146,165,-153,165,-185,165,165,-191,165,-193,165,-192,165,-148,-149,-154,165,-156,-157,-170,165,165,165,165,-189,165,-190,-188,-147,-155,165,165,165,-187,165,165,165,165,165,165,165,165,165,]),'CHAR_CONSTANT':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,137,140,141,152,153,177,178,186,196,197,198,201,202,203,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,275,281,284,285,292,297,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,340,341,342,343,344,345,346,355,358,374,375,377,380,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[166,166,-114,166,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,166,166,166,166,166,166,166,166,166,-115,-117,-120,166,166,166,166,166,166,166,166,166,-144,166,-159,-161,-163,166,166,166,-297,-298,-299,-300,-301,-302,-303,-304,166,166,166,166,166,166,-183,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-158,-160,-162,-164,-165,-167,-168,166,166,166,166,166,166,166,166,166,166,166,-166,-169,-171,166,166,166,166,166,-107,-109,166,-184,-122,166,166,166,-186,166,166,166,-145,-106,-108,166,166,166,166,166,166,166,166,-194,166,-146,166,-153,166,-185,166,166,-191,166,-193,166,-192,166,-148,-149,-154,166,-156,-157,-170,166,166,166,166,-189,166,-190,-188,-147,-155,166,166,166,-187,166,166,166,166,166,166,166,166,166,]),'STR_CONSTANT':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,137,140,141,152,153,177,178,186,196,197,198,201,202,203,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,275,281,284,285,292,297,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,340,341,342,343,344,345,346,355,358,374,375,377,380,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[167,167,-114,167,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,167,167,167,167,167,167,167,167,167,-115,-117,-120,167,167,167,167,167,167,167,167,167,-144,167,-159,-161,-163,167,167,167,-297,-298,-299,-300,-301,-302,-303,-304,167,167,167,167,167,167,-183,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-158,-160,-162,-164,-165,-167,-168,167,167,167,167,167,167,167,167,167,167,167,-166,-169,-171,167,167,167,167,167,-107,-109,167,-184,-122,167,167,167,-186,167,167,167,-145,-106,-108,167,167,167,167,167,167,167,167,-194,167,-146,167,-153,167,-185,167,167,-191,167,-193,167,-192,167,-148,-149,-154,167,-156,-157,-170,167,167,167,167,-189,167,-190,-188,-147,-155,167,167,167,-187,167,167,167,167,167,167,167,167,167,]),'NULL':([84,91,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,132,137,140,141,152,153,177,178,186,196,197,198,201,202,203,225,226,232,233,237,238,239,240,244,246,248,251,252,253,254,255,256,257,258,259,260,261,265,275,281,284,285,292,297,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,340,341,342,343,344,345,346,355,358,374,375,377,380,404,405,406,408,410,411,412,413,417,418,423,426,427,430,432,434,436,438,447,451,452,453,454,457,459,461,472,473,475,476,477,478,479,485,486,487,488,490,491,493,495,496,503,507,508,509,511,512,513,514,515,516,518,519,520,523,524,525,526,527,528,529,531,532,533,534,535,536,539,542,543,544,545,547,548,549,552,554,557,559,562,],[168,168,-114,168,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,168,168,168,168,168,168,168,168,168,-115,-117,-120,168,168,168,168,168,168,168,168,168,-144,168,-159,-161,-163,168,168,168,-297,-298,-299,-300,-301,-302,-303,-304,168,168,168,168,168,168,-183,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-158,-160,-162,-164,-165,-167,-168,168,168,168,168,168,168,168,168,168,168,168,-166,-169,-171,168,168,168,168,168,-107,-109,168,-184,-122,168,168,168,-186,168,168,168,-145,-106,-108,168,168,168,168,168,168,168,168,-194,168,-146,168,-153,168,-185,168,168,-191,168,-193,168,-192,168,-148,-149,-154,168,-156,-157,-170,168,168,168,168,-189,168,-190,-188,-147,-155,168,168,168,-187,168,168,168,168,168,168,168,168,168,]),'FINALLY':([106,196,250,344,346,412,525,],[-114,-115,347,347,-168,-169,-170,]),'CATCH':([106,196,250,344,346,412,525,],[-114,-115,348,348,-168,-169,-170,]),'CASE':([106,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,196,197,198,239,244,246,248,297,340,341,342,343,344,345,346,411,412,413,436,438,453,461,462,488,491,492,493,494,495,503,509,512,514,515,516,517,518,519,520,523,524,525,531,533,534,535,536,544,],[-114,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-115,-117,-120,-144,-159,-161,-163,-183,-158,-160,-162,-164,-165,-167,-168,-166,-169,-171,-184,-122,-186,-145,496,-194,-146,496,496,-150,-153,-185,-191,-193,-192,496,-148,-151,-149,-154,-152,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'DEFAULT':([106,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,196,197,198,239,244,246,248,297,340,341,342,343,344,345,346,411,412,413,436,438,453,461,462,488,491,492,493,494,495,503,509,512,514,515,516,517,518,519,520,523,524,525,531,533,534,535,536,544,],[-114,-116,-118,-119,-143,-122,-123,-124,-125,-126,-127,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-115,-117,-120,-144,-159,-161,-163,-183,-158,-160,-162,-164,-165,-167,-168,-166,-169,-171,-184,-122,-186,-145,497,-194,-146,497,497,-150,-153,-185,-191,-193,-192,497,-148,-151,-149,-154,-152,-156,-157,-170,-189,-190,-188,-147,-155,-187,]),'ELSE':([106,112,120,121,122,123,124,125,126,127,128,129,196,239,244,246,248,340,341,342,343,344,345,346,411,412,413,437,438,439,440,441,442,461,491,504,516,518,524,525,535,537,538,550,553,555,558,560,561,563,564,565,],[-114,-143,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-115,-144,-159,-161,-163,-158,-160,-162,-164,-165,-167,-168,-166,-169,-171,476,-128,-129,-130,-131,-132,-145,-146,-172,-148,-149,-157,-170,-147,545,-174,-182,-173,-179,-181,-180,-177,-178,-176,-175,]),'LOGIC_NOT':([132,140,141,152,153,186,202,203,225,226,232,233,237,240,251,252,253,254,255,256,257,258,259,260,261,265,275,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,375,377,380,405,410,417,418,423,426,427,434,447,451,452,475,478,496,507,528,],[232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,-297,-298,-299,-300,-301,-302,-303,-304,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,]),'BIT_NOT':([132,140,141,152,153,186,202,203,225,226,232,233,237,240,251,252,253,254,255,256,257,258,259,260,261,265,275,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,375,377,380,405,410,417,418,423,426,427,434,447,451,452,475,478,496,507,528,],[233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,-297,-298,-299,-300,-301,-302,-303,-304,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Goal':([0,],[1,]),'CompilationUnit':([0,],[2,]),'PackageDeclaration':([0,],[3,]),'ImportDeclarations':([0,3,],[4,19,]),'TypeDeclarations':([0,3,4,19,],[5,20,21,32,]),'ImportDeclaration':([0,3,4,19,],[8,8,22,22,]),'TypeDeclaration':([0,3,4,5,19,20,21,32,],[9,9,9,23,9,23,23,23,]),'SingleTypeImportDeclaration':([0,3,4,19,],[10,10,10,10,]),'TypeImportOnDemandDeclaration':([0,3,4,19,],[11,11,11,11,]),'ClassDeclaration':([0,3,4,5,19,20,21,32,],[12,12,12,12,12,12,12,12,]),'Modifiers':([0,3,4,5,19,20,21,32,41,49,],[14,14,14,14,14,14,14,14,58,58,]),'Modifier':([0,3,4,5,14,19,20,21,32,41,49,58,],[16,16,16,16,30,16,16,16,16,16,16,30,]),'Name':([6,13,40,41,49,58,84,90,91,100,107,132,137,140,141,152,153,155,177,178,185,186,201,202,203,219,225,226,232,233,237,238,240,251,252,253,265,275,280,281,284,285,292,295,303,304,305,306,307,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,414,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[24,28,48,72,72,72,150,48,150,72,150,210,242,210,210,264,264,48,150,150,72,210,242,210,301,48,264,264,264,264,210,337,210,210,210,210,301,210,48,150,210,210,210,72,210,264,264,210,264,264,264,264,264,264,264,264,264,72,264,264,264,264,264,264,264,210,210,210,242,264,264,210,242,210,242,242,210,72,210,264,210,210,210,210,264,264,264,242,242,242,210,242,242,210,337,242,242,242,242,150,210,210,242,242,242,150,150,242,242,210,242,242,242,242,242,242,242,242,242,242,242,242,242,242,]),'SimpleName':([6,13,40,41,49,58,84,90,91,100,107,132,137,140,141,152,153,155,177,178,185,186,201,202,203,219,225,226,232,233,237,238,240,251,252,253,265,275,280,281,284,285,292,295,303,304,305,306,307,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,414,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[25,25,25,62,62,62,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'QualifiedName':([6,13,40,41,49,58,84,90,91,100,107,132,137,140,141,152,153,155,177,178,185,186,201,202,203,219,225,226,232,233,237,238,240,251,252,253,265,275,280,281,284,285,292,295,303,304,305,306,307,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,414,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'Super':([31,37,],[38,44,]),'ClassBody':([31,37,38,44,],[39,45,46,80,]),'ClassType':([40,41,49,58,84,90,91,100,107,155,177,178,185,219,238,280,281,295,319,414,479,493,515,520,],[47,68,68,68,68,176,68,68,68,271,68,68,68,312,68,363,68,68,68,68,68,68,68,68,]),'ClassBodyDeclarations':([41,],[49,]),'ClassBodyDeclaration':([41,49,],[51,82,]),'ClassMemberDeclaration':([41,49,],[52,52,]),'StaticInitializer':([41,49,],[53,53,]),'ConstructorDeclaration':([41,49,],[54,54,]),'MethodDeclaration':([41,49,],[55,55,]),'FieldDeclaration':([41,49,],[56,56,]),'ConstructorDeclarator':([41,49,58,],[59,59,85,]),'MethodHeader':([41,49,],[60,60,]),'Type':([41,49,58,84,91,100,107,177,178,185,238,281,295,414,479,493,515,520,],[61,61,86,119,119,191,119,119,119,191,119,119,191,191,119,119,119,119,]),'PrimitiveType':([41,49,58,84,91,100,107,155,177,178,185,203,219,238,265,281,295,319,414,479,493,515,520,],[64,64,64,64,64,64,64,272,64,64,64,300,272,64,300,64,64,396,64,64,64,64,64,]),'ReferenceType':([41,49,58,84,91,100,107,177,178,185,238,281,295,319,414,479,493,515,520,],[65,65,65,65,65,65,65,65,65,65,65,65,65,395,65,65,65,65,65,]),'NumericType':([41,49,58,84,91,100,107,155,177,178,185,203,219,238,265,281,295,319,414,479,493,515,520,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ArrayType':([41,49,58,84,91,100,107,177,178,185,238,281,295,319,414,479,493,515,520,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'IntegralType':([41,49,58,84,91,100,107,155,177,178,185,203,219,238,265,281,295,319,414,479,493,515,520,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FloatingPointType':([41,49,58,84,91,100,107,155,177,178,185,203,219,238,265,281,295,319,414,479,493,515,520,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'Block':([57,60,84,91,107,137,142,177,178,201,281,347,374,404,457,476,477,485,487,490,493,499,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[83,93,120,120,120,120,250,120,120,120,120,413,120,120,120,120,120,120,120,120,120,525,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'Throws':([59,85,96,101,172,173,],[88,169,184,192,278,279,]),'ConstructorBody':([59,85,88,169,],[89,170,174,276,]),'MethodBody':([60,],[92,]),'VariableDeclarators':([61,86,119,],[95,171,199,]),'MethodDeclarator':([61,63,86,87,],[96,101,172,173,]),'VariableDeclarator':([61,86,119,183,],[97,97,97,286,]),'VariableDeclaratorId':([61,86,119,183,191,],[99,99,99,99,296,]),'BlockStatements':([84,91,177,493,515,],[107,178,281,520,520,]),'BlockStatement':([84,91,107,177,178,281,493,515,520,],[108,108,197,108,197,197,108,108,197,]),'LocalVariableDeclarationStatement':([84,91,107,177,178,281,493,515,520,],[109,109,109,109,109,109,109,109,109,]),'Statement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[110,110,110,241,110,110,297,110,436,453,488,503,297,509,512,514,110,531,533,534,110,110,436,453,544,488,503,509,512,514,531,533,534,544,]),'LocalVariableDeclaration':([84,91,107,177,178,238,281,479,493,515,520,],[111,111,111,111,111,335,111,335,111,111,111,]),'StatementWithoutTrailingSubstatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[113,113,113,113,113,113,113,113,438,113,113,113,438,113,113,113,113,113,113,113,113,113,438,438,113,438,438,438,438,438,438,438,438,438,]),'LabeledStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'IfThenStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'IfThenElseStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'WhileStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'ForStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'EmptyStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'ExpressionStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'SwitchStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'DoStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'BreakStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'ContinueStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'ReturnStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'ThrowStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'TryStatement':([84,91,107,137,177,178,201,281,374,404,457,476,477,485,487,490,493,508,511,513,515,520,526,527,532,542,545,547,549,552,554,557,559,562,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'StatementExpression':([84,91,107,137,177,178,201,238,281,374,404,406,408,454,457,459,476,477,479,485,486,487,490,493,508,511,513,515,520,526,527,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[135,135,135,135,135,135,135,336,135,135,135,336,460,336,135,336,135,135,336,135,336,135,135,135,135,135,135,135,135,135,135,336,135,336,135,336,135,135,336,135,135,135,135,135,135,]),'Assignment':([84,91,107,132,137,140,141,177,178,186,201,202,203,237,238,240,251,252,253,265,275,281,284,285,292,303,306,333,355,358,374,380,404,405,406,408,410,417,423,426,427,434,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[143,143,143,207,143,207,207,143,143,207,143,207,207,207,143,207,207,207,207,207,207,143,207,207,207,207,207,207,207,207,143,207,143,207,143,143,207,207,207,207,207,207,143,143,143,207,143,143,207,143,143,143,143,143,143,207,207,143,143,143,143,143,143,143,207,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'PreDecrementExpression':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,377,380,404,405,406,408,410,417,423,426,427,434,447,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[144,144,144,229,144,229,229,229,229,144,144,229,144,229,229,229,229,229,229,229,144,229,229,229,229,229,229,144,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,144,229,229,144,229,144,144,229,229,229,229,229,229,229,229,144,144,144,229,144,144,229,144,144,144,144,144,144,229,229,144,144,144,144,144,144,144,229,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'PreIncrementExpression':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,377,380,404,405,406,408,410,417,423,426,427,434,447,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[145,145,145,228,145,228,228,228,228,145,145,228,145,228,228,228,228,228,228,228,145,228,228,228,228,228,228,145,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,145,228,228,145,228,145,145,228,228,228,228,228,228,228,228,145,145,145,228,145,145,228,145,145,145,145,145,145,228,228,145,145,145,145,145,145,145,228,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'PostDecrementExpression':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[146,146,146,236,146,236,236,236,236,146,146,236,146,236,236,236,236,236,236,236,146,236,236,236,236,236,236,146,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,146,236,236,236,146,236,146,146,236,236,236,236,236,236,236,236,236,236,146,146,146,236,146,146,236,146,146,146,146,146,146,236,236,146,146,146,146,146,146,146,236,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'PostIncrementExpression':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[147,147,147,235,147,235,235,235,235,147,147,235,147,235,235,235,235,235,235,235,147,235,235,235,235,235,235,147,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,147,235,235,235,147,235,147,147,235,235,235,235,235,235,235,235,235,235,147,147,147,235,147,147,235,147,147,147,147,147,147,235,235,147,147,147,147,147,147,147,235,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'ClassInstanceCreationExpression':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[148,148,148,216,148,216,216,216,216,148,148,216,148,216,216,216,216,216,216,216,148,216,216,216,216,216,216,148,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,148,216,216,216,148,216,148,148,216,216,216,216,216,216,216,216,216,216,148,148,148,216,148,148,216,148,148,148,148,148,148,216,216,148,148,148,148,148,148,148,216,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'MethodInvocation':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[149,149,149,217,149,217,217,217,217,149,149,217,149,217,217,217,217,217,217,217,149,217,217,217,217,217,217,149,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,149,217,217,217,149,217,149,149,217,217,217,217,217,217,217,217,217,217,149,149,149,217,149,149,217,149,149,149,149,149,149,217,217,149,149,149,149,149,149,149,217,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'LeftHandSide':([84,91,107,132,137,140,141,177,178,186,201,202,203,237,238,240,251,252,253,265,275,281,284,285,292,303,306,333,355,358,374,380,404,405,406,408,410,417,423,426,427,434,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'PostfixExpression':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[154,154,154,231,154,231,231,231,231,154,154,231,154,231,231,231,231,231,231,231,154,231,231,231,231,231,231,154,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,154,231,231,231,154,231,154,154,231,231,231,231,231,231,231,231,231,231,154,154,154,231,154,154,231,154,154,154,154,154,154,231,231,154,154,154,154,154,154,154,231,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'Primary':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[156,156,156,212,156,212,212,263,263,156,156,212,156,212,212,263,263,263,263,212,156,212,212,212,212,212,212,156,212,212,212,212,263,263,212,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,212,212,212,156,263,263,212,156,212,156,156,212,212,263,212,212,212,212,263,263,263,156,156,156,212,156,156,212,156,156,156,156,156,156,212,212,156,156,156,156,156,156,156,212,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'FieldAccess':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[158,158,158,158,158,158,158,266,266,158,158,158,158,158,158,266,266,266,266,158,158,158,158,158,158,158,158,158,158,158,158,158,266,266,158,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,158,158,158,158,266,266,158,158,158,158,158,158,158,266,158,158,158,158,266,266,266,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'ArrayAccess':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[159,159,159,159,159,159,159,267,267,159,159,159,159,159,159,267,267,267,267,159,159,159,159,159,159,159,159,159,159,159,159,159,267,267,159,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,159,159,159,159,267,267,159,159,159,159,159,159,159,267,159,159,159,159,267,267,267,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'PrimaryNoNewArray':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[160,160,160,214,160,214,214,160,160,160,160,214,160,214,214,160,160,160,160,214,160,214,214,214,214,214,214,160,214,214,214,214,160,160,214,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,214,214,214,160,160,160,214,160,214,160,160,214,214,160,214,214,214,214,160,160,160,160,160,160,214,160,160,214,160,160,160,160,160,160,214,214,160,160,160,160,160,160,160,214,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'ArrayCreationExpression':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'Literal':([84,91,107,132,137,140,141,152,153,177,178,186,201,202,203,225,226,232,233,237,238,240,251,252,253,265,275,281,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,374,375,377,380,404,405,406,408,410,417,418,423,426,427,434,447,451,452,454,457,459,475,476,477,478,479,485,486,487,490,493,496,507,508,511,513,515,520,526,527,528,529,532,539,542,543,545,547,548,549,552,554,557,559,562,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'ClassTypeList':([90,],[175,]),'ExplicitConstructorInvocation':([91,],[177,]),'FormalParameterList':([100,185,],[188,288,]),'FormalParameter':([100,185,295,414,],[190,190,373,464,]),'Expression':([132,140,141,186,202,203,237,240,251,252,265,275,284,285,292,303,306,333,355,358,380,405,410,417,423,426,427,434,475,478,496,507,528,],[204,247,249,290,298,299,331,338,349,352,354,362,352,352,290,381,349,407,352,424,349,455,463,465,424,352,352,290,502,505,522,530,540,]),'AssignmentExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,306,333,355,358,380,405,410,417,423,426,427,434,475,478,496,507,528,],[205,205,205,205,205,205,205,205,205,205,353,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,]),'ConditionalExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,306,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,483,206,206,206,206,206,]),'ConditionalOrExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,306,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,]),'ConditionalAndExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,306,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,382,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'InclusiveOrExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,305,306,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,383,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,]),'ExclusiveOrExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,384,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'AndExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,387,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,]),'EqualityExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,311,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,388,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,]),'RelationalExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,311,313,314,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,389,390,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,]),'ShiftExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,391,392,393,394,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,]),'AdditiveExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,397,398,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,]),'MultiplicativeExpression':([132,140,141,186,202,203,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,333,355,358,380,405,410,417,423,426,427,434,452,475,478,496,507,528,],[224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,399,400,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,]),'UnaryExpression':([132,140,141,152,153,186,202,203,225,226,232,233,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,377,380,405,410,417,423,426,427,434,447,452,475,478,496,507,528,],[227,227,227,262,268,227,227,227,327,328,329,330,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,401,402,403,227,227,227,449,227,227,227,227,227,227,227,227,480,227,227,227,227,227,227,]),'UnaryExpressionNotPlusMinus':([132,140,141,152,153,186,202,203,225,226,232,233,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,375,377,380,405,410,417,418,423,426,427,434,447,451,452,475,478,496,507,528,],[230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,446,230,230,230,230,230,446,230,230,230,230,230,482,230,230,230,230,230,230,]),'CastExpression':([132,140,141,152,153,186,202,203,225,226,232,233,237,240,251,252,253,265,275,284,285,292,303,304,305,306,307,310,311,313,314,315,316,317,318,320,321,322,323,324,325,326,333,355,358,375,377,380,405,410,417,418,423,426,427,434,447,451,452,475,478,496,507,528,],[234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,]),'AssignmentOperator':([151,],[253,]),'VariableInitializer':([186,292,434,],[289,372,474,]),'ArrayInitializer':([186,292,434,],[291,291,291,]),'ForInit':([238,479,],[332,506,]),'StatementExpressionList':([238,406,454,459,479,486,529,539,543,548,],[334,458,458,458,334,458,458,458,458,458,]),'Catches':([250,],[344,]),'Finally':([250,344,],[345,411,]),'CatchClause':([250,344,],[346,412,]),'ArgumentList':([252,284,285,355,426,427,],[350,365,367,420,468,470,]),'DimExprs':([271,272,312,],[356,359,356,]),'DimExpr':([271,272,312,356,359,],[357,357,357,422,422,]),'VariableInitializers':([292,],[370,]),'Dims':([300,301,356,359,],[376,379,421,425,]),'StatementNoShortIf':([374,477,526,527,542,545,547,549,552,554,557,559,562,],[437,504,537,538,550,553,555,558,560,561,563,564,565,]),'LabeledStatementNoShortIf':([374,477,526,527,542,545,547,549,552,554,557,559,562,],[439,439,439,439,439,439,439,439,439,439,439,439,439,]),'IfThenElseStatementNoShortIf':([374,477,526,527,542,545,547,549,552,554,557,559,562,],[440,440,440,440,440,440,440,440,440,440,440,440,440,]),'WhileStatementNoShortIf':([374,477,526,527,542,545,547,549,552,554,557,559,562,],[441,441,441,441,441,441,441,441,441,441,441,441,441,]),'ForStatementNoShortIf':([374,477,526,527,542,545,547,549,552,554,557,559,562,],[442,442,442,442,442,442,442,442,442,442,442,442,442,]),'ForUpdate':([406,454,459,486,529,539,543,548,],[456,484,489,510,541,546,551,556,]),'SwitchBlock':([409,],[461,]),'SwitchBlockStatementGroups':([462,],[492,]),'SwitchLabels':([462,492,],[493,515,]),'SwitchBlockStatementGroup':([462,492,],[494,517,]),'SwitchLabel':([462,492,493,515,],[495,495,519,519,]),'ConstantExpression':([496,],[521,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> CompilationUnit','Goal',1,'p_Goal','parser.py',11),
  ('Literal -> INT_CONSTANT','Literal',1,'p_Literal','parser.py',15),
  ('Literal -> FLOAT_CONSTANT','Literal',1,'p_Literal','parser.py',16),
  ('Literal -> CHAR_CONSTANT','Literal',1,'p_Literal','parser.py',17),
  ('Literal -> STR_CONSTANT','Literal',1,'p_Literal','parser.py',18),
  ('Literal -> NULL','Literal',1,'p_Literal','parser.py',19),
  ('Type -> PrimitiveType','Type',1,'p_Type','parser.py',24),
  ('Type -> ReferenceType','Type',1,'p_Type','parser.py',25),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','parser.py',29),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','parser.py',30),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','parser.py',34),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','parser.py',35),
  ('IntegralType -> BYTE','IntegralType',1,'p_IntegralType','parser.py',39),
  ('IntegralType -> SHORT','IntegralType',1,'p_IntegralType','parser.py',40),
  ('IntegralType -> INT','IntegralType',1,'p_IntegralType','parser.py',41),
  ('IntegralType -> CHAR','IntegralType',1,'p_IntegralType','parser.py',42),
  ('FloatingPointType -> FLOAT','FloatingPointType',1,'p_FloatingPointType','parser.py',46),
  ('FloatingPointType -> DOUBLE','FloatingPointType',1,'p_FloatingPointType','parser.py',47),
  ('ReferenceType -> ClassType','ReferenceType',1,'p_ReferenceType','parser.py',51),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','parser.py',52),
  ('ClassType -> Name','ClassType',1,'p_ClassType','parser.py',56),
  ('ArrayType -> Name L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser.py',60),
  ('ArrayType -> PrimitiveType L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser.py',61),
  ('ArrayType -> ArrayType L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser.py',62),
  ('Name -> SimpleName','Name',1,'p_Name','parser.py',66),
  ('Name -> QualifiedName','Name',1,'p_Name','parser.py',67),
  ('SimpleName -> IDENTIFIER','SimpleName',1,'p_SimpleName','parser.py',71),
  ('QualifiedName -> Name DOT IDENTIFIER','QualifiedName',3,'p_QualifiedName','parser.py',75),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations','CompilationUnit',3,'p_CompilationUnit','parser.py',82),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',83),
  ('CompilationUnit -> PackageDeclaration TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',84),
  ('CompilationUnit -> ImportDeclarations TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser.py',85),
  ('CompilationUnit -> PackageDeclaration','CompilationUnit',1,'p_CompilationUnit','parser.py',86),
  ('CompilationUnit -> ImportDeclarations','CompilationUnit',1,'p_CompilationUnit','parser.py',87),
  ('CompilationUnit -> TypeDeclarations','CompilationUnit',1,'p_CompilationUnit','parser.py',88),
  ('CompilationUnit -> <empty>','CompilationUnit',0,'p_CompilationUnit','parser.py',89),
  ('PackageDeclaration -> PACKAGE Name SEMICOLON','PackageDeclaration',3,'p_PackageDeclaration','parser.py',95),
  ('ImportDeclarations -> ImportDeclarations ImportDeclaration','ImportDeclarations',2,'p_ImportDeclarations','parser.py',99),
  ('ImportDeclarations -> ImportDeclaration','ImportDeclarations',1,'p_ImportDeclarations','parser.py',100),
  ('TypeDeclarations -> TypeDeclaration','TypeDeclarations',1,'p_TypeDeclarations','parser.py',104),
  ('TypeDeclarations -> TypeDeclarations TypeDeclaration','TypeDeclarations',2,'p_TypeDeclarations','parser.py',105),
  ('ImportDeclaration -> SingleTypeImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser.py',109),
  ('ImportDeclaration -> TypeImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser.py',110),
  ('SingleTypeImportDeclaration -> IMPORT Name SEMICOLON','SingleTypeImportDeclaration',3,'p_SingleTypeImportDeclaration','parser.py',114),
  ('TypeImportOnDemandDeclaration -> IMPORT Name DOT MULT SEMICOLON','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','parser.py',118),
  ('TypeDeclaration -> ClassDeclaration','TypeDeclaration',1,'p_TypeDeclaration','parser.py',122),
  ('TypeDeclaration -> SEMICOLON','TypeDeclaration',1,'p_TypeDeclaration','parser.py',123),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','parser.py',128),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','parser.py',129),
  ('Modifier -> FINAL','Modifier',1,'p_modifier','parser.py',133),
  ('Modifier -> STATIC','Modifier',1,'p_modifier','parser.py',134),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER Super ClassBody','ClassDeclaration',5,'p_ClassDeclaration','parser.py',138),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser.py',139),
  ('ClassDeclaration -> CLASS IDENTIFIER Super ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser.py',140),
  ('ClassDeclaration -> CLASS IDENTIFIER ClassBody','ClassDeclaration',3,'p_ClassDeclaration','parser.py',141),
  ('Super -> EXTENDS ClassType','Super',2,'p_Super','parser.py',145),
  ('ClassBody -> BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER','ClassBody',3,'p_ClassBody','parser.py',149),
  ('ClassBody -> BLOCK_OPENER BLOCK_CLOSER','ClassBody',2,'p_ClassBody','parser.py',150),
  ('ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration','ClassBodyDeclarations',2,'p_ClassBodyDeclarations','parser.py',154),
  ('ClassBodyDeclarations -> ClassBodyDeclaration','ClassBodyDeclarations',1,'p_ClassBodyDeclarations','parser.py',155),
  ('ClassBodyDeclaration -> ClassMemberDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',159),
  ('ClassBodyDeclaration -> StaticInitializer','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',160),
  ('ClassBodyDeclaration -> ConstructorDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser.py',161),
  ('ClassMemberDeclaration -> MethodDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser.py',165),
  ('ClassMemberDeclaration -> FieldDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser.py',166),
  ('MethodDeclaration -> MethodHeader MethodBody','MethodDeclaration',2,'p_MethodDeclaration','parser.py',170),
  ('MethodHeader -> Modifiers Type MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser.py',174),
  ('MethodHeader -> Modifiers VOID MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser.py',175),
  ('MethodHeader -> Type MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser.py',176),
  ('MethodHeader -> VOID MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser.py',177),
  ('MethodHeader -> Modifiers Type MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser.py',178),
  ('MethodHeader -> Modifiers VOID MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser.py',179),
  ('MethodHeader -> Type MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser.py',180),
  ('MethodHeader -> VOID MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser.py',181),
  ('MethodDeclarator -> IDENTIFIER L_PAREN R_PAREN','MethodDeclarator',3,'p_MethodDeclarator','parser.py',185),
  ('MethodDeclarator -> IDENTIFIER L_PAREN FormalParameterList R_PAREN','MethodDeclarator',4,'p_MethodDeclarator','parser.py',186),
  ('FormalParameterList -> FormalParameter','FormalParameterList',1,'p_FormalParametersList','parser.py',190),
  ('FormalParameterList -> FormalParameterList COMMA FormalParameter','FormalParameterList',3,'p_FormalParametersList','parser.py',191),
  ('FormalParameter -> Type VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser.py',195),
  ('Throws -> THROWS ClassTypeList','Throws',2,'p_Throws','parser.py',199),
  ('ClassTypeList -> ClassType','ClassTypeList',1,'p_ClassTypeList','parser.py',203),
  ('ClassTypeList -> ClassTypeList COMMA ClassType','ClassTypeList',3,'p_ClassTypeList','parser.py',204),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','parser.py',208),
  ('MethodBody -> SEMICOLON','MethodBody',1,'p_MethodBody','parser.py',209),
  ('FieldDeclaration -> Modifiers Type VariableDeclarators SEMICOLON','FieldDeclaration',4,'p_FieldDeclaration','parser.py',213),
  ('FieldDeclaration -> Type VariableDeclarators SEMICOLON','FieldDeclaration',3,'p_FieldDeclaration','parser.py',214),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','parser.py',218),
  ('VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','parser.py',219),
  ('VariableDeclarator -> VariableDeclaratorId','VariableDeclarator',1,'p_VariableDeclarator','parser.py',223),
  ('VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','parser.py',224),
  ('VariableDeclaratorId -> IDENTIFIER','VariableDeclaratorId',1,'p_VariableDeclaratorId','parser.py',228),
  ('VariableDeclaratorId -> VariableDeclaratorId L_SQBR R_SQBR','VariableDeclaratorId',3,'p_VariableDeclaratorId','parser.py',229),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','parser.py',233),
  ('VariableInitializer -> ArrayInitializer','VariableInitializer',1,'p_VariableInitializer','parser.py',234),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','parser.py',238),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',4,'p_ConstructorDeclaration','parser.py',242),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser.py',243),
  ('ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser.py',244),
  ('ConstructorDeclaration -> ConstructorDeclarator ConstructorBody','ConstructorDeclaration',2,'p_ConstructorDeclaration','parser.py',245),
  ('ConstructorDeclarator -> SimpleName L_PAREN FormalParameterList R_PAREN','ConstructorDeclarator',4,'p_ConstructorDeclarator','parser.py',249),
  ('ConstructorDeclarator -> SimpleName L_PAREN R_PAREN','ConstructorDeclarator',3,'p_ConstructorDeclarator','parser.py',250),
  ('ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER','ConstructorBody',4,'p_ConstructorBody','parser.py',254),
  ('ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BLOCK_CLOSER','ConstructorBody',3,'p_ConstructorBody','parser.py',255),
  ('ConstructorBody -> BLOCK_OPENER BlockStatements BLOCK_CLOSER','ConstructorBody',3,'p_ConstructorBody','parser.py',256),
  ('ConstructorBody -> BLOCK_OPENER BLOCK_CLOSER','ConstructorBody',2,'p_ConstructorBody','parser.py',257),
  ('ExplicitConstructorInvocation -> THIS L_PAREN ArgumentList R_PAREN SEMICOLON','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser.py',261),
  ('ExplicitConstructorInvocation -> THIS L_PAREN R_PAREN SEMICOLON','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser.py',262),
  ('ExplicitConstructorInvocation -> SUPER L_PAREN ArgumentList R_PAREN SEMICOLON','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser.py',263),
  ('ExplicitConstructorInvocation -> SUPER L_PAREN R_PAREN SEMICOLON','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser.py',264),
  ('ArrayInitializer -> BLOCK_OPENER VariableInitializers BLOCK_CLOSER','ArrayInitializer',3,'p_ArrayInitializer','parser.py',270),
  ('ArrayInitializer -> BLOCK_OPENER BLOCK_CLOSER','ArrayInitializer',2,'p_ArrayInitializer','parser.py',271),
  ('VariableInitializers -> VariableInitializer','VariableInitializers',1,'p_VariableInitializers','parser.py',275),
  ('VariableInitializers -> VariableInitializers COMMA VariableInitializer','VariableInitializers',3,'p_VariableInitializers','parser.py',276),
  ('Block -> BLOCK_OPENER BLOCK_CLOSER','Block',2,'p_Block','parser.py',282),
  ('Block -> BLOCK_OPENER BlockStatements BLOCK_CLOSER','Block',3,'p_Block','parser.py',283),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','parser.py',287),
  ('BlockStatements -> BlockStatements BlockStatement','BlockStatements',2,'p_BlockStatements','parser.py',288),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','parser.py',292),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','parser.py',293),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMICOLON','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','parser.py',297),
  ('LocalVariableDeclaration -> Type VariableDeclarators','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser.py',301),
  ('Statement -> StatementWithoutTrailingSubstatement','Statement',1,'p_Statement','parser.py',307),
  ('Statement -> LabeledStatement','Statement',1,'p_Statement','parser.py',308),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','parser.py',309),
  ('Statement -> IfThenElseStatement','Statement',1,'p_Statement','parser.py',310),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','parser.py',311),
  ('Statement -> ForStatement','Statement',1,'p_Statement','parser.py',312),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',316),
  ('StatementNoShortIf -> LabeledStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',317),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',318),
  ('StatementNoShortIf -> WhileStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',319),
  ('StatementNoShortIf -> ForStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser.py',320),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',324),
  ('StatementWithoutTrailingSubstatement -> EmptyStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',325),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',326),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',327),
  ('StatementWithoutTrailingSubstatement -> DoStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',328),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',329),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',330),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',331),
  ('StatementWithoutTrailingSubstatement -> ThrowStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',332),
  ('StatementWithoutTrailingSubstatement -> TryStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser.py',333),
  ('EmptyStatement -> SEMICOLON','EmptyStatement',1,'p_EmptyStatement','parser.py',337),
  ('ExpressionStatement -> StatementExpression SEMICOLON','ExpressionStatement',2,'p_ExpressionStatement','parser.py',341),
  ('SwitchStatement -> SWITCH L_PAREN Expression R_PAREN SwitchBlock','SwitchStatement',5,'p_SwitchStatement','parser.py',345),
  ('SwitchBlock -> BLOCK_OPENER BLOCK_CLOSER','SwitchBlock',2,'p_SwitchBlock','parser.py',349),
  ('SwitchBlock -> BLOCK_OPENER SwitchBlockStatementGroups SwitchLabels BLOCK_CLOSER','SwitchBlock',4,'p_SwitchBlock','parser.py',350),
  ('SwitchBlock -> BLOCK_OPENER SwitchBlockStatementGroups BLOCK_CLOSER','SwitchBlock',3,'p_SwitchBlock','parser.py',351),
  ('SwitchBlock -> BLOCK_OPENER SwitchLabels BLOCK_CLOSER','SwitchBlock',3,'p_SwitchBlock','parser.py',352),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroup','SwitchBlockStatementGroups',1,'p_SwitchBlockStatementGroups','parser.py',356),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup','SwitchBlockStatementGroups',2,'p_SwitchBlockStatementGroups','parser.py',357),
  ('SwitchBlockStatementGroup -> SwitchLabels BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','parser.py',361),
  ('SwitchLabels -> SwitchLabel','SwitchLabels',1,'p_SwitchLabels','parser.py',365),
  ('SwitchLabels -> SwitchLabels SwitchLabel','SwitchLabels',2,'p_SwitchLabels','parser.py',366),
  ('SwitchLabel -> CASE ConstantExpression COLON','SwitchLabel',3,'p_SwitchLabel','parser.py',370),
  ('SwitchLabel -> DEFAULT COLON','SwitchLabel',2,'p_SwitchLabel','parser.py',371),
  ('DoStatement -> DO Statement WHILE L_PAREN Expression R_PAREN SEMICOLON','DoStatement',7,'p_DoStatement','parser.py',375),
  ('BreakStatement -> BREAK IDENTIFIER SEMICOLON','BreakStatement',3,'p_BreakStatement','parser.py',379),
  ('BreakStatement -> BREAK SEMICOLON','BreakStatement',2,'p_BreakStatement','parser.py',380),
  ('ContinueStatement -> CONTINUE IDENTIFIER SEMICOLON','ContinueStatement',3,'p_ContinueStatement','parser.py',384),
  ('ContinueStatement -> CONTINUE SEMICOLON','ContinueStatement',2,'p_ContinueStatement','parser.py',385),
  ('ReturnStatement -> RETURN Expression SEMICOLON','ReturnStatement',3,'p_ReturnStatement','parser.py',389),
  ('ReturnStatement -> RETURN SEMICOLON','ReturnStatement',2,'p_ReturnStatement','parser.py',390),
  ('ThrowStatement -> THROW Expression SEMICOLON','ThrowStatement',3,'p_ThrowStatement','parser.py',394),
  ('TryStatement -> TRY Block Catches','TryStatement',3,'p_TryStatement','parser.py',398),
  ('TryStatement -> TRY Block Catches Finally','TryStatement',4,'p_TryStatement','parser.py',399),
  ('TryStatement -> TRY Block Finally','TryStatement',3,'p_TryStatement','parser.py',400),
  ('Catches -> CatchClause','Catches',1,'p_Catches','parser.py',404),
  ('Catches -> Catches CatchClause','Catches',2,'p_Catches','parser.py',405),
  ('CatchClause -> CATCH L_PAREN FormalParameter R_PAREN Block','CatchClause',5,'p_CatchClause','parser.py',409),
  ('Finally -> FINALLY Block','Finally',2,'p_Finally','parser.py',413),
  ('LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','parser.py',417),
  ('IfThenElseStatementNoShortIf -> IF L_PAREN Expression R_PAREN StatementNoShortIf ELSE StatementNoShortIf','IfThenElseStatementNoShortIf',7,'p_IfThenElseStatementNoShortIf','parser.py',421),
  ('WhileStatementNoShortIf -> WHILE L_PAREN Expression R_PAREN StatementNoShortIf','WhileStatementNoShortIf',5,'p_WhileStatementNoShortIf','parser.py',425),
  ('ForStatementNoShortIf -> FOR L_PAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate R_PAREN StatementNoShortIf','ForStatementNoShortIf',9,'p_ForStatementNoShortIf','parser.py',429),
  ('ForStatementNoShortIf -> FOR L_PAREN SEMICOLON Expression SEMICOLON ForUpdate R_PAREN StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser.py',430),
  ('ForStatementNoShortIf -> FOR L_PAREN ForInit SEMICOLON SEMICOLON ForUpdate R_PAREN StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser.py',431),
  ('ForStatementNoShortIf -> FOR L_PAREN ForInit SEMICOLON Expression SEMICOLON R_PAREN StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser.py',432),
  ('ForStatementNoShortIf -> FOR L_PAREN ForInit SEMICOLON SEMICOLON R_PAREN StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser.py',433),
  ('ForStatementNoShortIf -> FOR L_PAREN SEMICOLON Expression SEMICOLON R_PAREN StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser.py',434),
  ('ForStatementNoShortIf -> FOR L_PAREN SEMICOLON SEMICOLON ForUpdate R_PAREN StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser.py',435),
  ('ForStatementNoShortIf -> FOR L_PAREN SEMICOLON SEMICOLON R_PAREN StatementNoShortIf','ForStatementNoShortIf',6,'p_ForStatementNoShortIf','parser.py',436),
  ('LabeledStatement -> IDENTIFIER COLON Statement','LabeledStatement',3,'p_LabeledStatement','parser.py',440),
  ('IfThenStatement -> IF L_PAREN Expression R_PAREN Statement','IfThenStatement',5,'p_IfThenStatement','parser.py',444),
  ('IfThenElseStatement -> IF L_PAREN Expression R_PAREN StatementNoShortIf ELSE Statement','IfThenElseStatement',7,'p_IfThenElseStatement','parser.py',448),
  ('WhileStatement -> WHILE L_PAREN Expression R_PAREN Statement','WhileStatement',5,'p_WhileStatement','parser.py',452),
  ('ForStatement -> FOR L_PAREN ForInit SEMICOLON Expression SEMICOLON ForUpdate R_PAREN Statement','ForStatement',9,'p_ForStatement','parser.py',456),
  ('ForStatement -> FOR L_PAREN SEMICOLON Expression SEMICOLON ForUpdate R_PAREN Statement','ForStatement',8,'p_ForStatement','parser.py',457),
  ('ForStatement -> FOR L_PAREN ForInit SEMICOLON SEMICOLON ForUpdate R_PAREN Statement','ForStatement',8,'p_ForStatement','parser.py',458),
  ('ForStatement -> FOR L_PAREN ForInit SEMICOLON Expression SEMICOLON R_PAREN Statement','ForStatement',8,'p_ForStatement','parser.py',459),
  ('ForStatement -> FOR L_PAREN ForInit SEMICOLON SEMICOLON R_PAREN Statement','ForStatement',7,'p_ForStatement','parser.py',460),
  ('ForStatement -> FOR L_PAREN SEMICOLON Expression SEMICOLON R_PAREN Statement','ForStatement',7,'p_ForStatement','parser.py',461),
  ('ForStatement -> FOR L_PAREN SEMICOLON SEMICOLON ForUpdate R_PAREN Statement','ForStatement',7,'p_ForStatement','parser.py',462),
  ('ForStatement -> FOR L_PAREN SEMICOLON SEMICOLON R_PAREN Statement','ForStatement',6,'p_ForStatement','parser.py',463),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','parser.py',467),
  ('StatementExpression -> PreDecrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',468),
  ('StatementExpression -> PreIncrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',469),
  ('StatementExpression -> PostDecrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',470),
  ('StatementExpression -> PostIncrementExpression','StatementExpression',1,'p_StatementExpression','parser.py',471),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','parser.py',472),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','parser.py',473),
  ('ForInit -> StatementExpressionList','ForInit',1,'p_ForInit','parser.py',477),
  ('ForInit -> LocalVariableDeclaration','ForInit',1,'p_ForInit','parser.py',478),
  ('ForUpdate -> StatementExpressionList','ForUpdate',1,'p_ForUpdate','parser.py',482),
  ('StatementExpressionList -> StatementExpression','StatementExpressionList',1,'p_StatementExpressionList','parser.py',486),
  ('StatementExpressionList -> StatementExpressionList COMMA StatementExpression','StatementExpressionList',3,'p_StatementExpressionList','parser.py',487),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','parser.py',491),
  ('Primary -> ArrayCreationExpression','Primary',1,'p_Primary','parser.py',492),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',496),
  ('PrimaryNoNewArray -> THIS','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',497),
  ('PrimaryNoNewArray -> L_PAREN Expression R_PAREN','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','parser.py',498),
  ('PrimaryNoNewArray -> ClassInstanceCreationExpression','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',499),
  ('PrimaryNoNewArray -> FieldAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',500),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',501),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser.py',502),
  ('ClassInstanceCreationExpression -> NEW ClassType L_PAREN R_PAREN','ClassInstanceCreationExpression',4,'p_ClassInstanceCreationExpression','parser.py',506),
  ('ClassInstanceCreationExpression -> NEW ClassType L_PAREN ArgumentList R_PAREN','ClassInstanceCreationExpression',5,'p_ClassInstanceCreationExpression','parser.py',507),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','parser.py',511),
  ('ArgumentList -> ArgumentList COMMA Expression','ArgumentList',3,'p_ArgumentList','parser.py',512),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser.py',516),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser.py',517),
  ('ArrayCreationExpression -> NEW ClassType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser.py',518),
  ('ArrayCreationExpression -> NEW ClassType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser.py',519),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','parser.py',523),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','parser.py',524),
  ('DimExpr -> L_SQBR Expression R_SQBR','DimExpr',3,'p_DimExpr','parser.py',528),
  ('Dims -> L_SQBR R_SQBR','Dims',2,'p_Dims','parser.py',532),
  ('Dims -> Dims L_SQBR R_SQBR','Dims',3,'p_Dims','parser.py',533),
  ('FieldAccess -> Primary DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser.py',537),
  ('FieldAccess -> SUPER DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser.py',538),
  ('MethodInvocation -> Name L_PAREN ArgumentList R_PAREN','MethodInvocation',4,'p_MethodInvocation','parser.py',542),
  ('MethodInvocation -> Name L_PAREN R_PAREN','MethodInvocation',3,'p_MethodInvocation','parser.py',543),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_PAREN ArgumentList R_PAREN','MethodInvocation',6,'p_MethodInvocation','parser.py',544),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_PAREN R_PAREN','MethodInvocation',5,'p_MethodInvocation','parser.py',545),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_PAREN ArgumentList R_PAREN','MethodInvocation',6,'p_MethodInvocation','parser.py',546),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_PAREN R_PAREN','MethodInvocation',5,'p_MethodInvocation','parser.py',547),
  ('ArrayAccess -> Name L_SQBR Expression R_SQBR','ArrayAccess',4,'p_ArrayAccess','parser.py',551),
  ('ArrayAccess -> PrimaryNoNewArray L_SQBR Expression R_SQBR','ArrayAccess',4,'p_ArrayAccess','parser.py',552),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','parser.py',556),
  ('PostfixExpression -> Name','PostfixExpression',1,'p_PostfixExpression','parser.py',557),
  ('PostfixExpression -> PostIncrementExpression','PostfixExpression',1,'p_PostfixExpression','parser.py',558),
  ('PostfixExpression -> PostDecrementExpression','PostfixExpression',1,'p_PostfixExpression','parser.py',559),
  ('PostIncrementExpression -> PostfixExpression INCR','PostIncrementExpression',2,'p_PostIncrementExpression','parser.py',563),
  ('PostDecrementExpression -> PostfixExpression DECR','PostDecrementExpression',2,'p_PostDecrementExpression','parser.py',567),
  ('UnaryExpression -> PreIncrementExpression','UnaryExpression',1,'p_UnaryExpression','parser.py',571),
  ('UnaryExpression -> PreDecrementExpression','UnaryExpression',1,'p_UnaryExpression','parser.py',572),
  ('UnaryExpression -> PLUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',573),
  ('UnaryExpression -> MINUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser.py',574),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','parser.py',575),
  ('PreIncrementExpression -> INCR UnaryExpression','PreIncrementExpression',2,'p_PreIncrementExpression','parser.py',579),
  ('PreDecrementExpression -> DECR UnaryExpression','PreDecrementExpression',2,'p_PreDecrementExpression','parser.py',583),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',587),
  ('UnaryExpressionNotPlusMinus -> LOGIC_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',588),
  ('UnaryExpressionNotPlusMinus -> BIT_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser.py',589),
  ('UnaryExpressionNotPlusMinus -> CastExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser.py',590),
  ('CastExpression -> L_PAREN PrimitiveType Dims R_PAREN UnaryExpression','CastExpression',5,'p_CastExpression','parser.py',594),
  ('CastExpression -> L_PAREN Expression R_PAREN UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','parser.py',595),
  ('CastExpression -> L_PAREN PrimitiveType R_PAREN UnaryExpression','CastExpression',4,'p_CastExpression','parser.py',596),
  ('CastExpression -> L_PAREN Name Dims R_PAREN UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','parser.py',597),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','parser.py',601),
  ('MultiplicativeExpression -> MultiplicativeExpression MULT UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',602),
  ('MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',603),
  ('MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser.py',604),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','parser.py',608),
  ('AdditiveExpression -> AdditiveExpression PLUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',609),
  ('AdditiveExpression -> AdditiveExpression MINUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser.py',610),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','parser.py',614),
  ('ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',615),
  ('ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser.py',616),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','parser.py',620),
  ('RelationalExpression -> RelationalExpression LESSER ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',621),
  ('RelationalExpression -> RelationalExpression GREATER ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',622),
  ('RelationalExpression -> RelationalExpression LESEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',623),
  ('RelationalExpression -> RelationalExpression GREQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser.py',624),
  ('RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','parser.py',625),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','parser.py',629),
  ('EqualityExpression -> EqualityExpression EQUALS RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',630),
  ('EqualityExpression -> EqualityExpression NOTEQ RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser.py',631),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','parser.py',635),
  ('AndExpression -> AndExpression BIT_AND EqualityExpression','AndExpression',3,'p_AndExpression','parser.py',636),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','parser.py',640),
  ('ExclusiveOrExpression -> ExclusiveOrExpression BIT_XOR AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','parser.py',641),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','parser.py',645),
  ('InclusiveOrExpression -> InclusiveOrExpression BIT_OR ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','parser.py',646),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','parser.py',650),
  ('ConditionalAndExpression -> ConditionalAndExpression LOGIC_AND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','parser.py',651),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','parser.py',655),
  ('ConditionalOrExpression -> ConditionalOrExpression LOGIC_OR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','parser.py',656),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','parser.py',660),
  ('ConditionalExpression -> ConditionalOrExpression QUES Expression COLON ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','parser.py',661),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','parser.py',665),
  ('AssignmentExpression -> Assignment','AssignmentExpression',1,'p_AssignmentExpression','parser.py',666),
  ('Assignment -> LeftHandSide AssignmentOperator AssignmentExpression','Assignment',3,'p_Assignment','parser.py',670),
  ('LeftHandSide -> Name','LeftHandSide',1,'p_LeftHandSide','parser.py',674),
  ('LeftHandSide -> FieldAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',675),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','parser.py',676),
  ('AssignmentOperator -> ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser.py',680),
  ('AssignmentOperator -> PLUSEQ','AssignmentOperator',1,'p_AssignmentOperator','parser.py',681),
  ('AssignmentOperator -> MINUSEQ','AssignmentOperator',1,'p_AssignmentOperator','parser.py',682),
  ('AssignmentOperator -> MULTEQ','AssignmentOperator',1,'p_AssignmentOperator','parser.py',683),
  ('AssignmentOperator -> DIVEQ','AssignmentOperator',1,'p_AssignmentOperator','parser.py',684),
  ('AssignmentOperator -> MODEQ','AssignmentOperator',1,'p_AssignmentOperator','parser.py',685),
  ('AssignmentOperator -> LSHIFTEQ','AssignmentOperator',1,'p_AssignmentOperator','parser.py',686),
  ('AssignmentOperator -> RSHIFTEQ','AssignmentOperator',1,'p_AssignmentOperator','parser.py',687),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','parser.py',692),
  ('ConstantExpression -> Expression','ConstantExpression',1,'p_ConstantExpression','parser.py',696),
]
