Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ASSERT
    BIT_AND
    BIT_NOT
    BIT_OR
    BIT_XOR
    BLOCK_COMMENT
    BREAK
    CASE
    CATCH
    COLON
    CONST
    CONTINUE
    DECR
    DEFAULT
    DIV
    DIVEQ
    DO
    ELSE
    EQUALS
    FINALLY
    FOR
    GREATER
    GREQ
    IF
    INCR
    INLINE_COMMENT
    INSTANCEOF
    LESEQ
    LESSER
    LOGIC_AND
    LOGIC_NOT
    LOGIC_OR
    LSHIFT
    LSHIFTEQ
    MINUS
    MINUSEQ
    MOD
    MODEQ
    MULTEQ
    NATIVE
    NEW
    NOTEQ
    PLUS
    PLUSEQ
    QUES
    RETURN
    RSHIFT
    RSHIFTEQ
    SWITCH
    THROW
    TRY
    WHILE

Grammar

Rule 0     S' -> Goal
Rule 1     Goal -> CompilationUnit
Rule 2     Literal -> INT_CONSTANT
Rule 3     Literal -> FLOAT_CONSTANT
Rule 4     Literal -> CHAR_CONSTANT
Rule 5     Literal -> STR_CONSTANT
Rule 6     Literal -> NULL
Rule 7     Type -> PrimitiveType
Rule 8     Type -> ReferenceType
Rule 9     PrimitiveType -> NumericType
Rule 10    PrimitiveType -> BOOLEAN
Rule 11    NumericType -> IntegralType
Rule 12    NumericType -> FloatingPointType
Rule 13    IntegralType -> BYTE
Rule 14    IntegralType -> SHORT
Rule 15    IntegralType -> INT
Rule 16    IntegralType -> CHAR
Rule 17    IntegralType -> LONG
Rule 18    FloatingPointType -> FLOAT
Rule 19    FloatingPointType -> DOUBLE
Rule 20    ReferenceType -> ClassType
Rule 21    ReferenceType -> ArrayType
Rule 22    ClassType -> Name
Rule 23    ArrayType -> Name L_SQBR R_SQBR
Rule 24    ArrayType -> PrimitiveType L_SQBR R_SQBR
Rule 25    ArrayType -> ArrayType L_SQBR R_SQBR
Rule 26    Name -> SimpleName
Rule 27    Name -> QualifiedName
Rule 28    SimpleName -> IDENTIFIER
Rule 29    QualifiedName -> Name DOT IDENTIFIER
Rule 30    CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations
Rule 31    CompilationUnit -> PackageDeclaration ImportDeclarations
Rule 32    CompilationUnit -> PackageDeclaration TypeDeclarations
Rule 33    CompilationUnit -> ImportDeclarations TypeDeclarations
Rule 34    CompilationUnit -> PackageDeclaration
Rule 35    CompilationUnit -> ImportDeclarations
Rule 36    CompilationUnit -> TypeDeclarations
Rule 37    PackageDeclaration -> PACKAGE Name SEMICOLON
Rule 38    ImportDeclarations -> ImportDeclarations ImportDeclaration
Rule 39    ImportDeclarations -> ImportDeclaration
Rule 40    TypeDeclarations -> TypeDeclaration
Rule 41    TypeDeclarations -> TypeDeclarations TypeDeclaration
Rule 42    ImportDeclaration -> SingleTypeImportDeclaration
Rule 43    ImportDeclaration -> TypeImportOnDemandDeclaration
Rule 44    SingleTypeImportDeclaration -> IMPORT Name SEMICOLON
Rule 45    TypeImportOnDemandDeclaration -> IMPORT Name DOT MULT SEMICOLON
Rule 46    TypeDeclaration -> ClassDeclaration
Rule 47    TypeDeclaration -> SEMICOLON
Rule 48    Modifiers -> Modifier
Rule 49    Modifiers -> Modifiers Modifier
Rule 50    Modifier -> FINAL
Rule 51    Modifier -> STATIC
Rule 52    ClassDeclaration -> Modifiers CLASS IDENTIFIER Super ClassBody
Rule 53    ClassDeclaration -> Modifiers CLASS IDENTIFIER ClassBody
Rule 54    ClassDeclaration -> CLASS IDENTIFIER Super ClassBody
Rule 55    ClassDeclaration -> CLASS IDENTIFIER ClassBody
Rule 56    Super -> EXTENDS ClassType
Rule 57    ClassBody -> BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER
Rule 58    ClassBody -> BLOCK_OPENER BLOCK_CLOSER
Rule 59    ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration
Rule 60    ClassBodyDeclarations -> ClassBodyDeclaration
Rule 61    ClassBodyDeclaration -> ClassMemberDeclaration
Rule 62    ClassBodyDeclaration -> StaticInitializer
Rule 63    ClassBodyDeclaration -> ConstructorDeclaration
Rule 64    ClassMemberDeclaration -> MethodDeclaration
Rule 65    ClassMemberDeclaration -> FieldDeclaration
Rule 66    MethodDeclaration -> MethodHeader MethodBody
Rule 67    MethodHeader -> Modifiers Type MethodDeclarator Throws
Rule 68    MethodHeader -> Modifiers VOID MethodDeclarator Throws
Rule 69    MethodHeader -> Type MethodDeclarator Throws
Rule 70    MethodHeader -> VOID MethodDeclarator Throws
Rule 71    MethodHeader -> Modifiers Type MethodDeclarator
Rule 72    MethodHeader -> Modifiers VOID MethodDeclarator
Rule 73    MethodHeader -> Type MethodDeclarator
Rule 74    MethodHeader -> VOID MethodDeclarator
Rule 75    MethodDeclarator -> IDENTIFIER L_PAREN R_PAREN
Rule 76    MethodDeclarator -> IDENTIFIER L_PAREN FormalParameterList R_PAREN
Rule 77    FormalParameterList -> FormalParameter
Rule 78    FormalParameterList -> FormalParameterList COMMA FormalParameter
Rule 79    FormalParameter -> Type VariableDeclaratorId
Rule 80    Throws -> THROWS ClassTypeList
Rule 81    ClassTypeList -> ClassType
Rule 82    ClassTypeList -> ClassTypeList COMMA ClassType
Rule 83    MethodBody -> Block
Rule 84    MethodBody -> SEMICOLON
Rule 85    FieldDeclaration -> Modifiers Type VariableDeclarators SEMICOLON
Rule 86    FieldDeclaration -> Type VariableDeclarators SEMICOLON
Rule 87    VariableDeclarators -> VariableDeclarator
Rule 88    VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator
Rule 89    VariableDeclarator -> VariableDeclaratorId
Rule 90    VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer
Rule 91    VariableDeclaratorId -> IDENTIFIER
Rule 92    VariableDeclaratorId -> VariableDeclaratorId L_SQBR R_SQBR
Rule 93    VariableInitializer -> Expression
Rule 94    VariableInitializer -> ArrayInitializer
Rule 95    StaticInitializer -> STATIC Block
Rule 96    ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody
Rule 97    ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody
Rule 98    ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody
Rule 99    ConstructorDeclaration -> ConstructorDeclarator ConstructorBody
Rule 100   ConstructorDeclarator -> SimpleName L_PAREN FormalParameterList R_PAREN
Rule 101   ConstructorDeclarator -> SimpleName L_PAREN R_PAREN
Rule 102   ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER
Rule 103   ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BLOCK_CLOSER
Rule 104   ConstructorBody -> BLOCK_OPENER BlockStatements BLOCK_CLOSER
Rule 105   ConstructorBody -> BLOCK_OPENER BLOCK_CLOSER
Rule 106   ExplicitConstructorInvocation -> THIS L_PAREN ArgumentList R_PAREN SEMICOLON
Rule 107   ExplicitConstructorInvocation -> THIS L_PAREN R_PAREN SEMICOLON
Rule 108   ExplicitConstructorInvocation -> SUPER L_PAREN ArgumentList R_PAREN SEMICOLON
Rule 109   ExplicitConstructorInvocation -> SUPER L_PAREN R_PAREN SEMICOLON

Terminals, with rules where they appear

ABSTRACT             : 
ASSERT               : 
ASSIGN               : 90
BIT_AND              : 
BIT_NOT              : 
BIT_OR               : 
BIT_XOR              : 
BLOCK_CLOSER         : 57 58 102 103 104 105
BLOCK_COMMENT        : 
BLOCK_OPENER         : 57 58 102 103 104 105
BOOLEAN              : 10
BREAK                : 
BYTE                 : 13
CASE                 : 
CATCH                : 
CHAR                 : 16
CHAR_CONSTANT        : 4
CLASS                : 52 53 54 55
COLON                : 
COMMA                : 78 82 88
CONST                : 
CONTINUE             : 
DECR                 : 
DEFAULT              : 
DIV                  : 
DIVEQ                : 
DO                   : 
DOT                  : 29 45
DOUBLE               : 19
ELSE                 : 
EQUALS               : 
EXTENDS              : 56
FINAL                : 50
FINALLY              : 
FLOAT                : 18
FLOAT_CONSTANT       : 3
FOR                  : 
GREATER              : 
GREQ                 : 
IDENTIFIER           : 28 29 52 53 54 55 75 76 91
IF                   : 
IMPORT               : 44 45
INCR                 : 
INLINE_COMMENT       : 
INSTANCEOF           : 
INT                  : 15
INT_CONSTANT         : 2
LESEQ                : 
LESSER               : 
LOGIC_AND            : 
LOGIC_NOT            : 
LOGIC_OR             : 
LSHIFT               : 
LSHIFTEQ             : 
L_PAREN              : 75 76 100 101 106 107 108 109
L_SQBR               : 23 24 25 92
MINUS                : 
MINUSEQ              : 
MOD                  : 
MODEQ                : 
MULT                 : 45
MULTEQ               : 
NATIVE               : 
NEW                  : 
NOTEQ                : 
NULL                 : 6
PACKAGE              : 37
PLUS                 : 
PLUSEQ               : 
QUES                 : 
RETURN               : 
RSHIFT               : 
RSHIFTEQ             : 
R_PAREN              : 75 76 100 101 106 107 108 109
R_SQBR               : 23 24 25 92
SEMICOLON            : 37 44 45 47 84 85 86 106 107 108 109
SHORT                : 14
STATIC               : 51 95
STR_CONSTANT         : 5
SUPER                : 108 109
SWITCH               : 
THIS                 : 106 107
THROW                : 
THROWS               : 80
TRY                  : 
VOID                 : 68 70 72 74
WHILE                : 
error                : 

Nonterminals, with rules where they appear

ArgumentList         : 106 108
ArrayInitializer     : 94
ArrayType            : 21 25
Block                : 83 95
BlockStatements      : 102 104
ClassBody            : 52 53 54 55
ClassBodyDeclaration : 59 60
ClassBodyDeclarations : 57 59
ClassDeclaration     : 46
ClassMemberDeclaration : 61
ClassType            : 20 56 81 82
ClassTypeList        : 80 82
CompilationUnit      : 1
ConstructorBody      : 96 97 98 99
ConstructorDeclaration : 63
ConstructorDeclarator : 96 97 98 99
ExplicitConstructorInvocation : 102 103
Expression           : 93
FieldDeclaration     : 65
FloatingPointType    : 12
FormalParameter      : 77 78
FormalParameterList  : 76 78 100
Goal                 : 0
ImportDeclaration    : 38 39
ImportDeclarations   : 30 31 33 35 38
IntegralType         : 11
LONG                 : 17
Literal              : 
MethodBody           : 66
MethodDeclaration    : 64
MethodDeclarator     : 67 68 69 70 71 72 73 74
MethodHeader         : 66
Modifier             : 48 49
Modifiers            : 49 52 53 67 68 71 72 85 96 97
Name                 : 22 23 29 37 44 45
NumericType          : 9
PackageDeclaration   : 30 31 32 34
PrimitiveType        : 7 24
QualifiedName        : 27
ReferenceType        : 8
SimpleName           : 26 100 101
SingleTypeImportDeclaration : 42
StaticInitializer    : 62
Super                : 52 54
Throws               : 67 68 69 70 96 98
Type                 : 67 69 71 73 79 85 86
TypeDeclaration      : 40 41
TypeDeclarations     : 30 32 33 36 41
TypeImportOnDemandDeclaration : 43
VariableDeclarator   : 87 88
VariableDeclaratorId : 79 89 90 92
VariableDeclarators  : 85 86 88
VariableInitializer  : 90

